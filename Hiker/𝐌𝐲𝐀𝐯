const Apollo = {
    empty: "hiker://empty",
    version: "20250101",
    url: config.host ? config.host.replace(/\/$/, "") : "https://javlist.me",
    d: [],
    data: {
        category: getMyVar('Apo.category', '0'),
        subCate: getMyVar('Apo.subCate', '0'),
    },
    baseParse: () => {
        const page = parseInt(MY_URL.split('##')[2])
        let categoryList = [{
            "title": "排行榜",
            "path": "/top100.php",
            "type": "video",
            "sub": []
        }, {
            "title": "分类▼",
            "path": "/default.cpp",
            "type": "video",
            "sub": [{
                "title": "有码",
                "path": "/default.cpp?year=07811dc6c422334ce36a09ff5cd6fe71&Ttype=2&other=dc1194d6780ae1741469b7fea8f61b02&t1=&t2=&t3=&t4=&t5=&t6=&t7="
            }, {
                "title": "无码",
                "path": "/uncensored.c?year=07811dc6c422334ce36a09ff5cd6fe71&tag=all&other=dc1194d6780ae1741469b7fea8f61b02&ytype=2&Ttype=2&sort=DESC"
            }, {
                "title": "欧美",
                "path": "/western.java?year=07811dc6c422334ce36a09ff5cd6fe71&tag=all&other=dc1194d6780ae1741469b7fea8f61b02&ytype=2&Ttype=2&sort=DESC"
            }, {
                "title": "国产",
                "path": "/domestic_index.js?year=07811dc6c422334ce36a09ff5cd6fe71&tag=all&other=dc1194d6780ae1741469b7fea8f61b02&ytype=2&Ttype=2&sort=DESC"
            }, {
                "title": "FC2",
                "path": "https://fc2-bt.top/default.cpp?year=07811dc6c422334ce36a09ff5cd6fe71&tag=all&other=dc1194d6780ae1741469b7fea8f61b02&ytype=2&Ttype=2&sort=DESC"
            }, {
                "title": "在线视频",
                "path": "https://ck91.top/"
            }]
        }, {
            "title": "搜索▼",
            "path": "/search.php",
            "type": "search",
            "sub": [{
                "title": "有码查询",
                "path": "/search.php"
            }, {
                "title": "无码查询",
                "path": "/uncensored_search.php"
            }, {
                "title": "欧美查询",
                "path": "/western_search.java"
            }, {
                "title": "国产查询",
                "path": "/domestic_search.php"
            }]
        }, {
            "title": "有码热门▼",
            "path": "#",
            "type": "video",
            "sub": [{
                "title": "单体作品",
                "path": "/t/s0BM8p0zgIXmQkgeE_DSbOBo8X--UDBFNwOsdhexRbk="
            }, {
                "title": "最佳女优",
                "path": "/t/y3Aqaseb15koEsax1edCSSJ6wHHsipML4N1qvwqPndk="
            }, {
                "title": "漫画改编",
                "path": "/t/0g0X870kYkb94UDvClw6vpGHYWXpAwXb5xeg1N7OvrA="
            }, {
                "title": "新人出道",
                "path": "/t/Nl2CznQ79wnieeRHwUB1aEdUoF0R9NfYiOPqBR8N0yM="
            }, {
                "title": "无码破解",
                "path": "/t/-t05DjwMaZunA4YNA-Jmbd-ZemqnkFychErzynFTr-8="
            }, {
                "title": "巨乳",
                "path": "/t/U0hUuSSK17CsvKsxS20BCMrstpkwH62pwtlR-PVYUbQ="
            }, {
                "title": "辣妹",
                "path": "/t/YbbyU4lYl83zCs4IRk8CG7NGiu0CRKR_QKbLAW90SbM="
            }, {
                "title": "熟女",
                "path": "/t/SE3AUYlLQRy8YW2HYNPvOEP8o29K5dULx9-dMaKU9XQ="
            }, {
                "title": "人妻",
                "path": "/t/WUHsN6cHpxdpVlMxI6JfVFwKz6NxBEUgpfS-u-8GqYs="
            }, {
                "title": "大屁股",
                "path": "/t/qL8JuNvGgwzwURpsQA0BcffSVmBR1_t5rn-B2tBdxdQ="
            }, {
                "title": "超乳",
                "path": "/t/ukBS1QNRJiJ2qLHZDd8j-hJORIzxrv1428dBQum60CQ="
            }, {
                "title": "巨大的根",
                "path": "/t/4-aVfnanj_F0BrRPFw08cAQXMipPZKFqQZIMbeBXItI="
            }, {
                "title": "猫耳",
                "path": "/t/lxu8_otGBxAxXh3MkSnJXt4vaacVWHiPgy1cQV2bcUY="
            }, {
                "title": "全部标签",
                "path": "/cat.py?type=6Wvt3eOMji5M_tHU6HuewA=="
            }]
        }, {
            "title": "无码热门▼",
            "path": "#",
            "type": "video",
            "sub": [{
                "title": "单体作品",
                "path": "/t2/s0BM8p0zgIXmQkgeE_DSbOBo8X--UDBFNwOsdhexRbk="
            }, {
                "title": "巨乳",
                "path": "/t2/U0hUuSSK17CsvKsxS20BCMrstpkwH62pwtlR-PVYUbQ="
            }, {
                "title": "辣妹",
                "path": "/t2/YbbyU4lYl83zCs4IRk8CG7NGiu0CRKR_QKbLAW90SbM="
            }, {
                "title": "熟女",
                "path": "/t2/SE3AUYlLQRy8YW2HYNPvOEP8o29K5dULx9-dMaKU9XQ="
            }, {
                "title": "人妻",
                "path": "/t2/WUHsN6cHpxdpVlMxI6JfVFwKz6NxBEUgpfS-u-8GqYs="
            }, {
                "title": "大屁股",
                "path": "/t2/qL8JuNvGgwzwURpsQA0BcffSVmBR1_t5rn-B2tBdxdQ="
            }, {
                "title": "全部标签",
                "path": "/uncensored_cat.py?type=6Wvt3eOMji5M_tHU6HuewA=="
            }]
        }, {
            "title": "片商新番▼",
            "path": "#",
            "type": "video",
            "sub": [{
                "title": "MOODYZ",
                "path": "/t/74b3Y96cMV7sbDoEC9XwFeftHK9rabWNlXHD6pbEjt4jSGnccCEb1shJH7zzY_qf"
            }, {
                "title": "Madonna",
                "path": "/t/74b3Y96cMV7sbDoEC9XwFUSK3qO1GBc7uRNJ8_ZOTwA="
            }, {
                "title": "kawaii",
                "path": "/t/pEENCPRMgLC-33A6TuPdJQQ_Ee3NrniuJR_sEbtPR9E="
            }, {
                "title": "本中",
                "path": "/t/uBbcJRKirtTnKa1bIkiTqORE2ksBOQVGloKXjuIFi1E="
            }, {
                "title": "Fitch",
                "path": "/t/gBv8n0EwYPxanyMr43H-IdBd7mNqsTX96JikagiDIYE="
            }, {
                "title": "OPPAI",
                "path": "/t/Ue_vqbPKLMDrflNXyliwttO25PUGKinNvp0WxPmPHaE="
            }, {
                "title": "S1",
                "path": "/t/3NPnLGj_qw59jrq-udFUz8KV6_0y2O0waxFQTIE--IwCy8e5KmbznmVJJ7WSEUXMzIIfLANYxkYtgeGBXkQaow=="
            }, {
                "title": "Hunter",
                "path": "/t/xMUvy2TDa9CffZ7ENeuS47iwkZr8d0pkXG5V6wQe9Wg="
            }, {
                "title": "E-BODY",
                "path": "/t/6gXGAFHflMIDUk5hLDaVDbeuAcA4b-BdCjaYv7eAu_w="
            }, {
                "title": "Attackers",
                "path": "/t/3NPnLGj_qw59jrq-udFUzzPqpuqEUXdxI9IWYCnBBt44_Dvo2JpeCKc0bD2Wyyl7"
            }, {
                "title": "muramura",
                "path": "/t2/VoGqi845Nbaa1ZCUMR7UGNcD3C_XAn26quW5v0ngj2Q="
            }, {
                "title": "heyzo",
                "path": "/t2/LQcj0l2zj44TRz-6xoIbUAf-0heyYHdEqMfroIYV-fo="
            }, {
                "title": "1pondo",
                "path": "/t2/9kh2UGZLZ9G-TQgxGHKrZb6YoAJYM6A2MJJg1ObGaTg="
            }, {
                "title": "caribbeancom",
                "path": "/t2/KkSf0LBST-uk-MhGTona8Otpk90pptjHEvphk3o6tis="
            }, {
                "title": "人妻斬り",
                "path": "/t2/eRmON1dLcOC4ljfhHsWyMTcvOCiIB03-QxeOZ7Tof9c="
            }]
        }, {
            "title": "标签▼",
            "path": "/cat.py?type=rpCNLOP1WDRnR2LjHsExtQ==",
            "type": "avatar",
            "sub": [{
                "title": "有码女优",
                "path": "/cat.py?type=0TActtgu02YfLieZ7SleLw=="
            }, {
                "title": "无码女优",
                "path": "/uncensored_cat.py?type=0TActtgu02YfLieZ7SleLw=="
            }, {
                "title": "欧美女优",
                "path": "/western_cat.java?type=0TActtgu02YfLieZ7SleLw=="
            }, {
                "title": "国产女优",
                "path": "/domestic_cat.py?type=0TActtgu02YfLieZ7SleLw=="
            }, {
                "title": "有码片商",
                "path": "/cat.py?type=rpCNLOP1WDRnR2LjHsExtQ=="
            }, {
                "title": "有码TAG",
                "path": "/cat.py?type=6Wvt3eOMji5M_tHU6HuewA=="
            }, {
                "title": "无码片商",
                "path": "/uncensored_cat.py?type=rpCNLOP1WDRnR2LjHsExtQ=="
            }, {
                "title": "无码TAG",
                "path": "/uncensored_cat.py?type=6Wvt3eOMji5M_tHU6HuewA=="
            }, {
                "title": "欧美片商",
                "path": "/western_cat.java?type=WBvfQ1QROghlcRTERGmhww=="
            }, {
                "title": "欧美TAG",
                "path": "/western_cat.java?type=6Wvt3eOMji5M_tHU6HuewA=="
            }, {
                "title": "国产TAG",
                "path": "/domestic_cat.py?type=6Wvt3eOMji5M_tHU6HuewA=="
            }]
        }]
        const currentCate = categoryList[Apollo.data.category]
        let url
        let type = currentCate.type
        let title = currentCate.title
        if (currentCate.sub.length > 0) {
            url = currentCate.sub[Apollo.data.subCate].path.startsWith("h") ? getMyVar("url", currentCate.sub[Apollo.data.subCate].path) : Apollo.url + getMyVar("url", currentCate.sub[Apollo.data.subCate].path)
            url = url.startsWith("h") ? url : getHome(currentCate.sub[Apollo.data.subCate].path) + url
            title = currentCate.sub[Apollo.data.subCate].title
        } else {
            url = Apollo.url + getMyVar("url", currentCate.path)
        }

        if (page === 1) {
            categoryList.forEach((cate, index) => {
                Apollo.d.push({
                    title: parseInt(Apollo.data.category) === index ? '‘‘’’<strong><font color="#ff1493">' + cate.title + '</font></strong>' : cate.title,
                    url: $(Apollo.empty + "#noLoading#")
                        .lazyRule((index) => {
                            putMyVar("Apo.category", index.toString())
                            putMyVar("Apo.subCate", '0')
                            clearMyVar("sort")
                            clearMyVar("url")
                            clearMyVar("yurl")
                            refreshPage()
                            return "hiker://empty"
                        }, index),
                    col_type: 'scroll_button',
                })
            })
            Apollo.d.push({
                col_type: 'blank_block',
            })
            if (currentCate.sub.length > 0) {
                currentCate.sub.forEach((cate, index) => {
                    Apollo.d.push({
                        title: parseInt(Apollo.data.subCate) === index ? '‘‘’’<strong><font color="#ff1493">' + cate.title + '</font></strong>' : cate.title,
                        url: $(Apollo.empty + "#noLoading#")
                            .lazyRule((index) => {
                                putMyVar("Apo.subCate", index.toString())
                                clearMyVar("sort")
                                clearMyVar("url")
                                clearMyVar("yurl")
                                refreshPage()
                                return "hiker://empty"
                            }, index),
                        col_type: 'scroll_button',
                    })
                })
                Apollo.d.push({
                    col_type: "blank_block",
                })
            }
        }
        /*       //翻页
        if (page !== 1) {
            url = url.includes("?") ? url + "&page=" + page : url + "?page=" + page
        }*/
        let nextPage = getMyVar("nextPage", "");
        if (nextPage && MY_PAGE > 1) {
            url = getHome(url) + nextPage;
        } else if (MY_PAGE > 1) {
            url = "没有下一页哦😑"
        }
        const html = fetch(url, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
            }
        })
        log(url)
        try {
            var next = pdfh(html, "#page&&a:matches(下一页)&&href")
            putMyVar("nextPage", next);
        } catch {
            clearMyVar("nextPage");
            //log("可能不存在下一页或者下一页定位有问题");
        }

        if (title !== "在线视频") {
            Apollo.dtfenlei(html, url)
        } else {
            Apollo.spfenlei(url)
        }
        switch (type) {
            case 'video':
                if (title == "在线视频") {
                    Apollo.videoOnline(html, url)
                } else if (title == "全部标签") {
                    Apollo.avatarType(html, url)
                } else {
                    Apollo.videoType(html, url)
                }
                break
            case 'avatar':
                Apollo.avatarType(html, url)
                break
            case 'search':
                Apollo.searchType(html, url)
                Apollo.avatarType(html, url)
                Apollo.d.push({
                    col_type: "blank_block",
                })
                Apollo.videoType(html, url)
                break
            default:
                Apollo.videoType(html, url)
        }
        setResult(Apollo.d)
    },

    //一级sort
    videoSort: (html, url) => {
        /* Apollo.d.push({
            col_type: "blank_block",
        })*/
        const sort = pdfa(html, '.filters&&.filter-item&&a')
        sort.forEach((item, index) => {
            var title = pdfh(item, 'Text');
            Apollo.d.push({
                title: getMyVar('ysort', '0') == index ? '‘‘’’<strong><font color="#ff1493">' + title + '</font></strong>' : title,
                url: getHome(url) + pdfh(item, 'a&&href') + $('#noLoading#')
                    .lazyRule((index) => {
                        putMyVar('ysort', index);
                        putMyVar("yurl", input);
                        refreshPage();
                        return 'hiker://empty'
                    }, index),
                col_type: 'scroll_button'
            })
        })
    },

    //动态分类
    dtfenlei: (html, url) => {
        const 分类颜色 = '#ff1493'
        const 大类定位 = '.filters&&.filter-item:not(:matches(分类))'
        const 拼接分类 = ''
        const 小类定位 = 'body&&a:not(:matches(收起))'
        const 分类标题 = 'a&&Text'
        const 分类链接 = 'a&&href'
        try {
            var categories = pdfa(html, 大类定位)
                .concat(pdfa(html, 拼接分类))
        } catch (e) {
            var categories = pdfa(html, 大类定位)
        }
        let init_cate = []
        for (let i = 0; i < 20; i++) {
            init_cate.push("0")
        }
        const cate_temp_json = getMyVar("sort", JSON.stringify(init_cate))
        const cate_temp = JSON.parse(cate_temp_json)
        const catlgth = categories.length - 1
        if (MY_PAGE === 1) {
            categories.forEach((category, index) => {
                let sub_categories = pdfa(category, 小类定位);
                if (index == catlgth) {
                    var cili = sub_categories.splice(1, 1)[0]
                    sub_categories.unshift(cili)
                }
                sub_categories = sub_categories.filter(t => pdfh(t, 'a&&Text')
                    .trim() !== '');
                let genre_title = pdfa(category, "body&&span")
                    .map(t => pdfh(t, "Text"));
                sub_categories.forEach((item, key) => {
                    let title = pdfh(item, 分类标题)
                    if (key === 0) {
                        title = title.replace("全部", genre_title[0])
                    }
                    Apollo.d.push({
                        title: key.toString() === cate_temp[index] ? '““””<b><span style="color: ' + 分类颜色 + '">' + title + '</span></b>' : title,
                        url: $(pdfh(item, 分类链接) + '#noLoading#')
                            .lazyRule((params) => {
                                params.cate_temp[params.index] = params.key.toString()

                                putMyVar("sort", JSON.stringify(params.cate_temp))
                                putMyVar("url", input)
                                refreshPage()
                                return "hiker://empty"
                            }, {
                                cate_temp: cate_temp,
                                index: index,
                                key: key,
                                page: MY_PAGE,
                            }),
                        col_type: 'scroll_button',
                    })
                })
                Apollo.d.push({
                    col_type: "blank_block"
                });
            })
        }
    },

    //在线视频顶部分类
    spfenlei: (url) => {
        if (MY_PAGE == 1) {
            var spol = [{
                "name": "全部",
                "url": ""
            }, {
                "name": "2024",
                "url": "/list.php?id=gJumhF7V1f_60Pl3COOnr8KFlgF7tQZWGMrzozxzETaDifFShPuFVBF_BLNhNddhOMlO7USg0mxyAFI4yJ1q4A=="
            }, {
                "name": "2023",
                "url": "/list.php?id=qJhbXWm0DTTcf0-cyIv_Mkpa1Xh70pxWRhvI57jJAi7KM9UDra0JmhP45c5lv1K386t_xBoI1WCTcSenVC__Jg=="
            }, {
                "name": "2022",
                "url": "/list.php?id=D3hit-b0b5q3wf7MYvawAT9jRnT5KFiMCtrRcvIl7C6l91UaKQUJTDfrp4nHpbajNatW3wcyC8WKZdTkpQZIqw=="
            }, {
                "name": "国产色情",
                "url": "/list.php?id=FDMXIxks3e2kMRw_AxGXXLpjk2nnmmXYF87FH3atA9mz_p22d_6XmEYV7sUY65FuiGnJarAuJt37ie8Fg11zfw=="
            }, {
                "name": "亚洲有码",
                "url": "/list.php?id=jgTqwXbL5L5NeIuFRL01q_IsQ0u41YV8qwPOgkPf89DEE_ahyEBlhiMjBeXuxuUb9V_qKkbJG2Zd1Q1KYgXdUA=="
            }, {
                "name": "网红流出",
                "url": "/list.php?id=Q6ixlj-Zoj5OLykb_zWkmBjRXcBEb7nQUeBsdfWCIaTsWFVxdBOoV76-4juw5Ymvj3HidolUnsBDnlXlDktzRg=="
            }, {
                "name": "唯美港姐",
                "url": "/list.php?id=tZ3J6ptMaphU6w1dzjABzkJhXw67cF_oOqKrO8GKtm6hAkInWG8sLN14634prwD5N5PqFrZX-bcjQE38eI8TfQ=="
            }, {
                "name": "亚洲无码",
                "url": "/list.php?id=tvndC6ZDEwmtOa_jYif4cCvXYDlu7muO4OojkU79AV3zyw91Fn9-6ckxm2VEwf4ZyrVv95o6bo41RT4l_A2t0Q=="
            }, {
                "name": "女优系列",
                "url": "/list.php?id=DInkZebRsHLFvQjL_mhZU5PIbs592mL0dL9uDREerpqRVBuimKgeG-tH3L55C14Ygfoub0d6t1ElU1bw49rMTA=="
            }, {
                "name": "强奸乱伦",
                "url": "/list.php?id=BWckNG_VT9FV4rNQ-kKfbcW_A7jdk9lhn6f0AAPwjGJagN4wlsn_m53oU1A-AzMSDizwzcypjcPe_AxBRpNqGg=="
            }, {
                "name": "巨乳美乳",
                "url": "/list.php?id=Cos7XUu5tK-eNrjG0LtcAU8WVlrBdDnVVcx-13eKGSa-34lsd6B8FocdqdUGdSFkM8m3kTtKnF9P3KOAQGk-bA=="
            }, {
                "name": "制服丝袜",
                "url": "/list.php?id=mYnjC3yinEDsq6-opdWqCLNH5Zq9sItL2KcSZJtrQpeiJfUcB74eMB1Dt__tcM9cFxPcCrJDzYU228GzPjy1-g=="
            }, {
                "name": "日本精品",
                "url": "/list.php?id=ZQltuOlljHgRpfJpmthKYIsgkGq6c8ZCQKNg3CJy_NbTj_JfnCErjIu7ksHRTEAL7GZbnwLYNz5PRhcCGxir1A=="
            }, {
                "name": "台湾辣妹",
                "url": "/list.php?id=SeOrHGp1jvNEuhzBxCrdEV3TYFaAWF_mLnl9ipm43NnumCLUPBVKbezOv1y_m9mqorS1fdissuCO_DDro8J2eQ=="
            }, {
                "name": "主播直播",
                "url": "/list.php?id=84ZrsuMvrr38BZT6_BWIR_Dz778i7ugxlbeFlmJbE3ENp1-JSBm2Fm7ax8F8m__w_AcXmPmXyHcT5hyLPqYENg=="
            }, {
                "name": "剧情介绍",
                "url": "/list.php?id=yJhroGnb3RePlkxAgr8Ah3PjR_A4XWhNLFhIaJtHuRQoi84hMbUr94YSH05qXk6jcXxfUzVSy8X-nZjsrzw4qg=="
            }, {
                "name": "Cosplay",
                "url": "/list.php?id=KNX9_GhRw2K-Jnyw-tjSHlsGPlRzk2-rAZON8J4PB_nZPTU5SDrlHvJq-n9Ns0489C_wfogXdbPgsb1XS6xnOg=="
            }, {
                "name": "兽耳系列",
                "url": "/list.php?id=BziiLnO9YOj_V7q63zPngynS7rDZ10mVH5XNhdltaYrOY18zrJ6Gv9idXovYtPzg28WViKgiou2eBKgMDmr25g=="
            }, {
                "name": "风情旗袍",
                "url": "/list.php?id=50X87iYnbn3cnTbmcQxBCCVuSX_a00KTHmj-7myOuhP0F-uSn_Ms32W_ZWs7MnliqlxIRWmTjNxTNoYOzKRXFA=="
            }, {
                "name": "可爱学生",
                "url": "/list.php?id=UzLepCG02-2ghTLk2hczL9aHoad1_8yS3FwSx42ex8cIfBIwUnK8MQXvV6GZ1Lrt-9ss_RhhF2_m9thcvi25fw=="
            }, {
                "name": "韩国御姐",
                "url": "/list.php?id=wqe4zh6yg0suyl0M7HiAA5SLjgJAFVh-TnJw9mp0sID17ESd6zNVwgfFbFUW-TrRuPQfz2b_gV1C9ZT1TQHMwg=="
            }, {
                "name": "欺辱凌辱",
                "url": "/list.php?id=YgaQVd9Z55JTRXsdVcO-lIBUKCfuEpsk-zKs5Vr4_Z0WmxCZ2Z1ub73pHfR3us4vISE-oQpqZX5BdsKQH7xE9w=="
            }, {
                "name": "闷骚护士",
                "url": "/list.php?id=o0KiQNJ7ioHSACvdtAHJ-5ON107VIfFSpNfagkXasn1QynZv0I_mq-AZpEqWqYIojSfH7IKnpVEhqTgLqclrJQ=="
            }, {
                "name": "网曝门",
                "url": "/list.php?id=jujM9UoqzGjUNX--BqpQhT3bk29zKKknRf1wHBMTzNP2JEDJM9QlYIT9Nq5lOT7RvbSzhtraIkAgf6YRWDMtEA=="
            }, {
                "name": "中文字幕",
                "url": "/list.php?id=hKm8NOAx2cwTDPjjGJLMfI2BY52mXPJ2CmA2JlqlKGlkRET0zizvZrGNStXUUHjSClQGPUNuzRQtMQEJsPH6-g=="
            }, {
                "name": "人妻熟女",
                "url": "/list.php?id=Xzb4Sej8TubLz5aj9NNiYvXE3BSpqmenM60I15nQzGZb7Omg5coh_dostV4XtTUEnZ8-WR2lgnWlpIYE0BNW2w=="
            }, {
                "name": "素人自拍",
                "url": "/list.php?id=o-G9tsS05twJTe6iTA_ZKzpI8NftmUJlB8330nF3JAp1P4Vuk3b5Os29IVbi54gfNHSsc4sfgT9X1PLHGa953w=="
            }, {
                "name": "91探花",
                "url": "/list.php?id=wPTcPztSqHNwqMR3wrW_Vmx60Y0pAih3NJaQZ3m3e3mpjqmY7uWeyTa-C5bqTFuuJouzVvPMr_JYWJal5xzMMA=="
            }, {
                "name": "瑜伽裤",
                "url": "/list.php?id=i-lauZZ7_GV1rZDut8XTj62QzqMNy1xwEjZ46u9Ajd05BiOGjsYOck7NZBf7t4re5sPXw5Pj0TrtL5-cQ1AHww=="
            }, {
                "name": "古装扮演",
                "url": "/list.php?id=fKdL2-T4TLRhND1jLezJpgPn9t84il7uyPRCVLnQ-ZR7QWEmdhXc7La45psT7B6eOhpkaZuguy_Km6K9ICvIlg=="
            }, {
                "name": "多人多P",
                "url": "/list.php?id=H84DAn4rBflKbmAJgS13Ko6-yhihPgZyPLvQfwi2iFvKM2MRXksa23fnKrjr7ecNWvA6oGXfGTaQ1NZ1FnAXwQ=="
            }, {
                "name": "恋腿狂魔",
                "url": "/list.php?id=dqtdEFEZcjAdQ9k-UPN_1aJGzmfTb6qECBEzW80DPdBUUiJNsgeS0SMkS32xOBMUy0zpgld-puYe3k8wzlUuTg=="
            }, {
                "name": "萝莉少女",
                "url": "/list.php?id=290L_2f5k6b2AlJghefMMBCSbySTT8Ws1qe90_--4fdV0-cV26JuVgUsnl29iY3aGxoA36NMQf-JAxHE-rV7Mg=="
            }, {
                "name": "欧美精品",
                "url": "/list.php?id=fRZmCPnAp_KPpJjhclmdiq369AGj1BfsUMp3ruJfIG31F5z4CY9yxbCEVqligLplSrsaxiVE2QrPtL2-v9ugDQ=="
            }, {
                "name": "成人动漫",
                "url": "/list.php?id=DJqE0zIVJUTenk3gmzzirEH8wuRhyEJChbTIw4A7Y2-TWHhMAQepGj56GKa3EKCWFIqZYPuNasaFubcPKihuyQ=="
            }, {
                "name": "东南亚AV",
                "url": "/list.php?id=VMuu2r__hv95ymhc21UHi11paEteUIWlB_wDCuiVGqrOxJawfWyC7pDqsESHIBagzwX1wd8Z7a_2ZljBiZok6g=="
            }, {
                "name": "口交颜射",
                "url": "/list.php?id=1dwCqvVjGTSJByD7cLvTAwrYNY2SIj79Vh6l_sZ1iGdyPGris7Tuxvtf-wWG_797qIZU5rBG4FPObE3VZh6UMA=="
            }, {
                "name": "伦理三级",
                "url": "/list.php?id=xBhyX4cqNOX4OMMZ64n7n_sUSEzIIgemCeKRljGPqtpbKWteRgDsf9yU3Sq5WD3IuwzhCHl5ID0Rc1vNKmKARQ=="
            }, {
                "name": "精品推荐",
                "url": "/list.php?id=NSopWanaB5TZulFyZaXNOu8VOttEFIS6uLi9nTqmprOOzI8iCB3uRSF669JBk1YBUUAVftw51s39yQD9_fvTsQ=="
            }, {
                "name": "自拍偷拍",
                "url": "/list.php?id=sRoGhJehAsLzcR4ZZQwfMYd6tmpX9pCzzvVE_xoyjNVfQu6G6T0MRyjTPlYBT0cSRX2qACZfZWNfB_S01-syEg=="
            }, {
                "name": "野外露出",
                "url": "/list.php?id=Lof8nm207syAUum4_oBcY1KhI-fQtcA3EeGULyiDoFraDSE-TOK5av-ifmuM1plLgMy2R5q-TWNx-mIlrXphIQ=="
            }, {
                "name": "女同性恋",
                "url": "/list.php?id=l6yrq87mKUq3J_LCnv8p_wCJfMwfP_K0ZJUDss96zFyeOKv7O8RHiHRLkSIMTPs0fqiQL2eYd-q25fECGbynmw=="
            }, {
                "name": "传媒出品",
                "url": "/list.php?id=JJLVAWy4SVVtLyZcNqcT7I__oEUsU9bZQbTsoDancQJ7_8Jf4LOdQ8_v2CgQ7fQyuGpUGfS--fvo3WpeTmQnnw=="
            }, {
                "name": "过膝袜",
                "url": "/list.php?id=OXUS896NeeQWNWyLUBObAMvXh0fPnvpiyUj-n4gauNpcoTCSF0snfqVm085CuHHAzR8xHigaD2l7TPsmcsP9Vg=="
            }, {
                "name": "日本无码",
                "url": "/list.php?id=dPNEBIWoZ7O2A7I86XpToenAXAtR8uanKd1V1XJEV2y_cdIhmvvBBVpzzyUh_sOXxZESfaa8JZJea7UABf216A=="
            }, {
                "name": "欧美情色",
                "url": "/list.php?id=cZ1zjHkiVHGjLIa_j9aBykCBtQmS8ylre6UGDeciKF9JqRrUCPWGk-LjfMdAN_fiv7lMv1zfAQq-x-lFzxfm1Q=="
            }, {
                "name": "邻家人妻",
                "url": "/list.php?id=ed3Qydg5amNI5gqjwHW9ClRgUFMDdHHE19MroaeVfY5RC49AwEhDHDSw0TCaBCbw3q6m7bMUA6BLwNc_xioB7w=="
            }, {
                "name": "AV明星",
                "url": "/list.php?id=cLzZ8Z-zWqQjfQ1AIDLpGRxZoj4kQfSQf2ya_FSXB7a_wuMESDOyvio2StGXJ2k6v0cmi8gCZdZ50vS3E2tWhA=="
            }, {
                "name": "国产情色",
                "url": "/list.php?id=jwcfjNAQCvW71QJcSM_bG2fu9XqaRm1vC3xLVvf4nxUYYhvCucfmNGfi2G4vqxTYRYcT0COVgABNYpMXXfmQVA=="
            }, {
                "name": "长腿丝袜",
                "url": "/list.php?id=iEYNk_cEGR5YrFtHLPlsKnVLst6yUkISO2Dy0sRdrelLvhsQeRbpMkDDv6HkAuEwcp_JdF23Ywf5r1-BA3aCmg=="
            }, {
                "name": "网红主播",
                "url": "/list.php?id=qIOO-_QAM4zy2lK16llzGgPQJd9IGwiNWbFW1Assgya-06VNRXJaaWhhe1yzVnh8BLgqrPiQkTp_sWRaOJYamw=="
            }, {
                "name": "国模私拍",
                "url": "/list.php?id=Xvrnf0100zgmRoSnlwOd96XxtCIB3MVXmDRlIAGPIFhHoaYc2tvczaiwhHh8vsnS8fCd4IEkzdzRLmt80QZ3_A=="
            }]
            spol.forEach((item, index) => {
                var title = item.name;
                Apollo.d.push({
                    title: getMyVar('sort', '0') == index ? '‘‘’’<strong><font color="#ff1493">' + title + '</font></strong>' : title,
                    url: getHome(url) + item.url + $('#noLoading#')
                        .lazyRule((index) => {
                            putMyVar('sort', index);
                            putMyVar("url", input);
                            refreshPage();
                            return 'hiker://empty'
                        }, index),
                    col_type: 'scroll_button'
                })
                if (index == 4 || index == 28 || index == 52) {
                    Apollo.d.push({
                        col_type: "blank_block"
                    })
                }
            })
        }
    },
    //一级视频列表
    videoType: (html, url) => {
        try {
            var lastpagenum = pdfh(html, "#page&&a:matches(最大页)&&Text") == "" ? pdfh(html, "#page&&a,-1&&Text")
                .replace(/.*?(\d+)/, "$1") : pdfh(html, "#page&&a:matches(最大页)&&Text")
                .replace(/.*?(\d+)/, "$1");
        } catch {}
        var list = pdfa(html, "#posts&&.post");
        list.forEach(item => {
            var title = pdfh(item, ".time,1&&Text")
                .toUpperCase() + "\t" + pdfh(item, "h3&&Text");
            var img = pdfh(item, "img&&data-src");
            img = img.includes("domestic") ? img : img.replace("thumbnail-", "");
            Apollo.d.push({
                title: title,
                desc: pdfh(item, ".vip-tag&&Text")
                    .toUpperCase() + "\t\t📅" + pdfh(item, ".time&&Text"),
                img: img.startsWith("http") ? img : Apollo.url + img,
                url: $(getHome(url) + pdfh(item, 'a&&href') + '#noHistory#')
                    .rule(() => {
                        const Apollo = $.require('hiker://page/Apollo')
                        Apollo.videoParse(MY_URL)
                        setResult(Apollo.d)
                    }),
                col_type: "movie_2",
                extra: {
                    pageTitle: title,
                    title: title,
                    longClick: [{
                        title: '【跳页】=>\t最大页\t:【' + lastpagenum + "】",
                        js: $.toString((url, lastpagenum) => {
                                return $('', '1到' + lastpagenum + '之间的页码')
                                    .input((url, lastpagenum) => {
                                        if (parseInt(input) > 1 && parseInt(input) <= parseInt(lastpagenum) && parseInt(input) % 1 == 0) {
                                            var jumpu = url.replace(/(\?page=\d+|\&page=\d+|$)/, (match) => {
                                                if (match.startsWith('?page=') || match.startsWith('&page=')) {
                                                    return match.charAt(0) + 'page=' + input;
                                                } else {
                                                    return (url.includes('?') ? '&page=' : '?page=') + input;
                                                }
                                            });
                                            jumpu = jumpu.replace(/https?:\/\/.*?\//, "/")
                                            putMyVar("url", jumpu);
                                            putMyVar("yurl", jumpu);
                                            refreshPage();
                                            return 'toast://你已经穿越到了' + input + '页'
                                        } else {
                                            return "toast://请输入正确的页码"
                                        }
                                    }, url, lastpagenum)
                            },
                            url, lastpagenum)
                    }]
                }
            })
        })
    },

    //一级在线视频
    videoOnline: (html, url) => {
        var list = pdfa(html, "#posts&&.post");
        list.forEach(item => {
            var title = pdfh(item, "h3&&Text");
            var img = pdfh(item, "img&&data-src");
            Apollo.d.push({
                title: title,
                desc: "\t\t📅" + pdfh(item, ".time&&Text"),
                img: img.includes("domestic") ? img : img.replace("thumbnail-", ""),
                url: $(getHome(url) + pdfh(item, 'a&&href') + '#noHistory#')
                    .lazyRule(() => {
                        const html = fetch(input, {
                            headers: {
                                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
                            }
                        })
                        var binaryStr = html.match(/decodeBinaryString\('(.*?)'\)/)[1]

                        function decodeBinaryString(binaryStr) {
                            var result = "";
                            for (var i = 0; i < binaryStr.length; i += 8) {
                                var byte = binaryStr.substr(i, 8);
                                result += String.fromCharCode(parseInt(byte, 2));
                            }
                            return base64Decode(base64Decode(result));
                        }
                        var result = decodeBinaryString(binaryStr)
                        return pdfh(result, "source&&src")
                    }),
                col_type: "movie_2",
            })
        })
    },

    //一级演员
    avatarType: (html, url) => {
        try {
            var lastpagenum = pdfh(html, "#page&&a:matches(最大页)&&Text") == "" ? pdfh(html, "#page&&a,-1&&Text")
                .replace(/.*?(\d+)/, "$1") : pdfh(html, "#page&&a:matches(最大页)&&Text")
                .replace(/.*?(\d+)/, "$1");
        } catch {}
        var list = pdfa(html, '.content.tagslist&&li')
        list.forEach(item => {
            Apollo.d.push({
                title: pdfh(item, 'a&&Text'),
                desc: "",
                pic_url: pdfh(item, 'img&&data-src')
                    .startsWith("http") ? pdfh(item, 'img&&data-src') : 'https://img.vinua.cn/images/IQ3h0.jpg',
                url: $(getHome(url) + pdfh(item, 'a&&href') + '#fypage#noHistory#')
                    .rule(() => {
                        const Apollo = $.require('hiker://page/Apollo')
                        Apollo.avatarParse(MY_URL)
                        setResult(Apollo.d)
                    }),
                col_type: 'card_pic_3',
                extra: {
                    longClick: [{
                        title: '【跳页】=>\t最大页\t:【' + lastpagenum + "】",
                        js: $.toString((url, lastpagenum) => {
                                return $('', '1到' + lastpagenum + '之间的页码')
                                    .input((url, lastpagenum) => {
                                        if (parseInt(input) > 1 && parseInt(input) <= parseInt(lastpagenum) && parseInt(input) % 1 == 0) {
                                            var jumpu = url.replace(/(\?page=\d+|\&page=\d+|$)/, (match) => {
                                                if (match.startsWith('?page=') || match.startsWith('&page=')) {
                                                    return match.charAt(0) + 'page=' + input;
                                                } else {
                                                    return (url.includes('?') ? '&page=' : '?page=') + input;
                                                }
                                            });
                                            jumpu = jumpu.replace(/https?:\/\/.*?\//, "/")
                                            putMyVar("url", jumpu);
                                            refreshPage();
                                            return 'toast://你已经穿越到了' + input + '页'
                                        } else {
                                            return "toast://请输入正确的页码"
                                        }
                                    }, url, lastpagenum)
                            },
                            url, lastpagenum)
                    }]
                }
            })
        })
    },

    searchType: (html, url) => {
        if (MY_PAGE == 1) {
            var list = pdfa(html, ".search-container&&option")
            var action = pdfh(html, "form&&action")
            var code = pdfh(html, ".search-container&&input[name=code]&&value")
            var hash = pdfh(html, ".search-container&&input[name=hash]&&value")
            list.forEach((item, index) => {
                var value = pdfh(item, "option&&value");
                var title = pdfh(item, "Text");
                Apollo.d.push({
                    title: "🔎" + title,
                    url: $.toString((action, value, index, code, hash) => {
                        surl = action + "?SearchType=" + value + "&s=" + input + "&code=" + code + "&hash=" + hash;
                        putMyVar('ssou', index);
                        putMyVar('value', input);
                        putMyVar('url', surl)
                        refreshPage();
                        return 'hiker://empty';
                    }, action, value, index, code, hash),
                    desc: '美好即刻开始...',
                    col_type: "input",
                    extra: getMyVar("ssou") == index ? {
                        defaultValue: getMyVar('value', '') || "",
                        onChange: "putMyVar('value', input);"
                    } : ""
                });
            })
        }
    },

    //一级页面.简
    avatarParse: (url) => {
        addListener("onClose", $.toString(() => {
            clearMyVar("yurl");
            clearMyVar("ysort");
        }));
        url = getMyVar("yurl", url)
            .replace(/(.*?)#.*/, "$1");
        url = url.startsWith("http") ? url : Apollo.url + url;
        if (MY_PAGE !== 1) {
            url = url.includes("?") ? url + "&page=" + MY_PAGE : url + "?page=" + MY_PAGE
        }
        const html = fetch(url, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
            }
        })
        log(url)
        if (MY_PAGE === 1) {
            Apollo.videoSort(html, url)
        }
        Apollo.videoType(html, url)
    },

    //搜索
    searchParse: (url) => {
        surl = Apollo.url + "/search.php";
        const htmll = fetch(surl, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
            }
        });
        var code = pdfh(htmll, ".search-container&&input[name=code]&&value")
        var hash = pdfh(htmll, ".search-container&&input[name=hash]&&value")
        url = Apollo.url + url.replace("hiker://empty##", "") + "&code=" + code + "&hash=" + hash;
        log(url)
        const html = fetch(url, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
            }
        });
        Apollo.videoType(html, url)
        setResult(Apollo.d)
    },

    //翻译
    translate: (text) => {
        var switchtrans = config.switchtrans ? config.switchtrans : true
        if (switchtrans == true || switchtrans == "彩云小译") {
            try {
                var to = 'zh'
                var from = 'auto'

                function init_data(source_lang, target_lang) {
                    return {
                        source: '',
                        detect: true,
                        os_type: 'ios',
                        device_id: 'F1F902F7-1780-4C88-848D-71F35D88A602',
                        trans_type: source_lang + '2' + target_lang,
                        media: 'text',
                        request_id: 424238335,
                        user_id: '',
                        dict: true,
                    }
                }

                function getRandomNumber() {
                    const rand = Math.floor(Math.random() * 99999) + 100000
                    return rand * 1000
                }
                const post_data = init_data(from, to)
                post_data.source = text
                post_data.request_id = getRandomNumber()
                let res = fetch('https://interpreter.cyapi.cn/v1/translator', {
                    method: 'POST',
                    header: {
                        'Content-Type': 'application/json',
                        'x-authorization': 'token ssdj273ksdiwi923bsd9',
                        'user-agent': 'caiyunInterpreter/5 CFNetwork/1404.0.5 Darwin/22.3.0',
                    },
                    body: post_data,
                })
                let result = JSON.parse(res)
                    .target
                return result + "【☁️】"
            } catch {
                log("翻译失败，使用原文");
                return text
            }
        } else if (switchtrans == "小牛翻译") {
            try {
                var url = "https://api.niutrans.com/NiuTransServer/translation";
                var api = config.api;
                if (api) {
                    if (text != "") {
                        var lang = "https://test.niutrans.com/NiuTransServer/language?src_text=" + text + "&source=text";
                        var from = JSON.parse(fetch(lang, {
                                timeout: 1000
                            }))
                            .language;
                        var result = post(url, {
                            body: {
                                src_text: text,
                                from: from,
                                to: "zh",
                                apikey: api,
                            },
                            timeout: 1223
                        });
                        var data = JSON.parse(result)
                        if (data.tgt_text) {
                            return data.tgt_text + "【🐮】"
                        } else {
                            log("翻译失败，使用原文");
                            return text
                        }
                    } else {
                        log("翻译失败，原文为空");
                        return text
                    }
                } else {
                    toast("预处理请填写翻译api")
                    return text
                }
            } catch {
                log("翻译失败，使用原文");
                return text
            }
        } else {
            return text
        }
    },

    yiyanParse: (html) => {
        //author:粉妹
        function save_day_say_cache() {
            let day_say_cache = {}
            let day_say_html = fetch('https://v1.hitokoto.cn', {
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',
                },
            })
            day_say_html = JSON.parse(day_say_html)
            day_say_cache['content'] = day_say_html['hitokoto']
            day_say_cache['time'] = Math.floor(Date.now() / 1000)
            storage0.putMyVar('daysay', day_say_cache)
            return day_say_html['hitokoto']
        }

        let day_say = ''
        try {
            let day_say_cache = {}
            let day_time = 0
            if (storage0.getMyVar('daysay')) {
                day_say_cache = storage0.getMyVar('daysay', {})
                day_time = day_say_cache['time']
                if (Math.floor(Date.now() / 1000) - day_time >= 600) {
                    day_say = save_day_say_cache()
                } else {
                    day_say = day_say_cache['content']
                }
            } else {
                day_say = save_day_say_cache()
            }
        } catch {
            day_say = ''
        }
        var story = pdfh(html, "body&&h2:matches(故事)+table&&Text")
        var content = Apollo.translate(story)
        var lazy = $(`#noLoading#`)
            .lazyRule((content) => {
                if (content !== "") {
                    var title = findItem('content_decid')
                        .title
                    if (title.includes("<br>\t")) {
                        updateItem("content_decid", {
                            title: title.replace(/(.*?)<br>\t.*/, "$1"),
                        })
                    } else {
                        updateItem("content_decid", {
                            title: title.replace(/(.*?)<br>\t.*/, "$1") + '<br>\t\t\t\t\t\t\t' + content.small()
                                .fontcolor("#8A2BE2"),
                        })
                    }
                    return "hiker://empty"
                } else {
                    return "toast://此篇没有故事简介哦😐"
                }
            }, content)
        Apollo.d.push({
            title: "🔥 <a style='text-decoration: none;' href='" + lazy + "'>故事</a> ：" + day_say.replace(/—/g, "")
                .fontcolor("#FF0000")
                .small(),
            url: "hiker://empty",
            col_type: "rich_text",
            extra: {
                lineVisible: false,
                textSize: 16,
                lineSpacing: 3,
                id: "content_decid"
            }
        })
    },
    //二级
    videoParse: (url) => {
        addListener("onClose", () => {
            clearMyVar("piclist");
        });
        clearMyVar("yurl");
        clearMyVar("ysort");
        var yiji = $('#fypage#noHistory#')
            .rule(() => {
                const Apollo = $.require('hiker://page/Apollo')
                Apollo.avatarParse(MY_URL)
                setResult(Apollo.d)
            })
        const html = fetch(url, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
            }
        })
        log(url)
        var title = MY_PARAMS.title;
        Apollo.d.push({
            title: '““””' + title.fontcolor("#E57A1A").small(),
            url: "hiker://empty" + $('#noLoading#')
                .lazyRule((desct) => {
                    var desc = findItem('transdesc')
                        .desc
                    if (!desc) {
                        const Apollo = $.require('hiker://page/Apollo')
                        var translates = Apollo.translate(desct)
                        updateItem("transdesc", {
                            desc: '““””' + translates.fontcolor("red"),
                        })
                    } else {
                        updateItem("transdesc", {
                            desc: '',
                        })
                    }
                    return "hiker://empty"
                }, title),
            col_type: 'text_1',
            extra: {
                lineVisible: false,
                id: 'transdesc',
                longClick: [{
                    title: '网页',
                    js: $.toString(() => {
                        return "web://" + MY_URL
                    })
                }, {
                    title: '百度翻译',
                    js: $.toString((title) => {
                        return "x5://https://fanyi.baidu.com/#jp/zh/" + title
                    }, title)
                }, {
                    title: 'Deepl翻译',
                    js: $.toString((title) => {
                        return "x5://https://www.deepl.com/zh/translator-mobile#ja/zh/" + title
                    }, title)
                }, {
                    title: '谷歌翻译',
                    js: $.toString((title) => {
                        return "x5://https://translate.google.com/?hl=zh-CN&sl=ja&tl=zh-CN&text=" + title
                    }, title)
                }]
            }
        })
        const img = pdfh(html, "#video&&a&&href");
        const preview = pdfh(html, "body&&#ssdd+script&&Html")
        Apollo.d.push({
            img: img,
            url: preview.match(/src="(.*?)"/) ? preview.match(/src="(.*?)"/)[1] : "toast://没有预览视频哦😐",
            col_type: "pic_1_full",
        })

        Apollo.yiyanParse(html)

        const 识别码 = pdfh(html, "body&&#td-Label&&button&&Text")
        Apollo.CodeParse(识别码)

        try {
            var picnum = pdfh(html, ".button2&&Text");
            if (picnum != "") {
                var list = pdfa(html, "#hiddenButton&&a")
                Apollo.d.push({
                    title: '““””' + picnum.fontcolor("#FF00FF"),
                    url: Apollo.empty + $("")
                        .lazyRule((list) => {
                            try {
                                if (getMyVar("piclist", "收起") == "收起") {
                                    addItemAfter('picnum', {
                                        title: '““””' + "【收起图片】".fontcolor("#FF00FF"),
                                        url: "hiker://empty" + $("")
                                            .lazyRule((list) => {
                                                for (var i = list.length - 1; i >= 0; i--) {
                                                    deleteItem('previewpic' + i);
                                                }
                                                deleteItem('nopiclist');
                                                putMyVar("piclist", "收起");
                                                return "hiker://empty"
                                            }, list),
                                        col_type: "text_center_1",
                                        extra: {
                                            lineVisible: false,
                                            id: "nopiclist"
                                        }
                                    })
                                    for (var i = list.length - 1; i >= 0; i--) {
                                        addItemAfter('picnum', {
                                            url: 'hiker://empty',
                                            img: pdfh(list[i], "a&&href"),
                                            col_type: "pic_1_full",
                                            extra: {
                                                id: 'previewpic' + i
                                            }
                                        });
                                    }
                                    putMyVar("piclist", "展开");
                                } else {
                                    for (var i = list.length - 1; i >= 0; i--) {
                                        deleteItem('previewpic' + i);
                                    }
                                    deleteItem('nopiclist');
                                    putMyVar("piclist", "收起");
                                }
                                return "hiker://empty"
                            } catch {
                                return "hiker://empty"
                            }
                        }, list),
                    col_type: "text_center_1",
                    extra: {
                        lineVisible: false,
                        id: "picnum"
                    }
                })
            } else {
                for (var i = 0; i < 2; i++) {
                    Apollo.d.push({
                        col_type: "big_blank_block"
                    })
                }
            }
        } catch {}

        Apollo.d.push({
            title: '““””' + "番号：".fontcolor("#FFD000") + 识别码.toUpperCase()
                .fontcolor("#67E0FA"),
            url: "copy://" + 识别码.toUpperCase(),
            col_type: "scroll_button",
        })
        //类别
        try {
            var Genre = pdfh(html, 'body&&#th-Genre:matches(類別)&&a&&Text');
            if (Genre) {
                Apollo.d.push({
                    title: '‘‘’’<b><middle><font color="#1E90FF">' + Genre + '</font></middle></b>',
                    url: getHome(url) + pdfh(html, 'body&&#th-Genre:matches(類別)&&a&&href') + yiji,
                    col_type: 'scroll_button',
                    extra: {
                        pageTitle: Genre
                    }
                })
            }
        } catch {}
        //导演
        try {
            var director = pdfh(html, 'body&&#td-Series&&a&&Text');
            if (director) {
                Apollo.d.push({
                    title: '导演:‘‘’’<b><middle><font color="#1E90FF">\t\t' + director + '</font></middle></b>',
                    url: getHome(url) + pdfh(html, 'body&&#td-Series&&a&&href') + yiji,
                    col_type: 'scroll_button',
                    extra: {
                        pageTitle: director
                    }
                });
            }
        } catch {}

        Apollo.d.push({
            col_type: "blank_block",
        }, {
            title: pdfh(html, 'body&&#td-data&&Text') ? pdfh(html, 'body&&#td-data&&Text')
                .replace("时间", "") : "发布:N/A",
            url: Apollo.empty,
            col_type: "scroll_button",
        }, {
            title: pdfh(html, 'body&&#td-SkUmub&&Text') != "時長:" ? pdfh(html, 'body&&#td-SkUmub&&Text') : "時長:N/A",
            url: Apollo.empty,
            col_type: "scroll_button",
        })

        //片商
        try {
            var makers = pdfh(html, 'body&&#td-Act&&a&&Text');
            if (makers) {
                Apollo.d.push({
                    title: '片商:‘‘’’<b><middle><font color="#1E90FF">\t' + makers + '</font></middle></b>',
                    url: getHome(url) + pdfh(html, 'body&&#td-Act&&a&&href') + yiji,
                    col_type: 'scroll_button',
                    extra: {
                        pageTitle: makers
                    }
                })
            }
        } catch {}

        //演员
        var arts = parseDomForArray(html, 'body&&#th-Genre:contains(演員)&&a');
        if (arts.length > 0) {
            Apollo.d.push({
                col_type: "blank_block"
            })
            Apollo.d.push({
                title: "演員:",
                url: 'hiker://empty',
                col_type: 'scroll_button',
            })
            for (var i in arts) {
                var title = parseDomForHtml(arts[i], 'Text');
                Apollo.d.push({
                    title: '‘‘’’<b><middle><font color="#c13141">' + title + '</font></middle></b>',
                    url: getHome(url) + pdfh(arts[i], 'a&&href') + yiji,
                    col_type: 'scroll_button',
                    extra: {
                        pageTitle: title,
                        longClick: [{
                            title: '复制演员',
                            js: $.toString((title) => {
                                return "copy://" + title;
                            }, title)
                        }, {
                            title: '谷歌搜索',
                            js: $.toString((title) => {
                                return "https://www.google.com/search?q=" + title;
                            }, title)
                        }, {
                            title: '百度搜索',
                            js: $.toString((title) => {
                                return "https://www.baidu.com/s?wd=" + title;
                            }, title)
                        }, {
                            title: '磁力搜演员',
                            js: $.toString((title) => {
                                return "hiker://page/sou?rule=磁力君.简&p=fypage&searchTerms=" + title
                            }, title)
                        }]
                    }
                })
            }
        }

        //TAG
        var arts = parseDomForArray(html, 'body&&#th-Genre:contains(TAG)&&a');
        arts = arts.filter(t => pdfh(t, 'a&&Text')
            .trim() !== '');
        if (arts.length > 0) {
            Apollo.d.push({
                col_type: "blank_block"
            })
            Apollo.d.push({
                title: "TAG:",
                url: 'hiker://empty',
                col_type: 'scroll_button',
            });
            for (var i in arts) {
                Apollo.d.push({
                    title: '‘‘’’<b><middle><font color="#1E8884">' + parseDomForHtml(arts[i], 'Text') + '</font></middle></b>',
                    url: getHome(url) + pdfh(arts[i], 'a&&href') + yiji,
                    col_type: 'scroll_button',
                    extra: {
                        pageTitle: parseDomForHtml(arts[i], 'Text')
                    }
                })
            }
        }

        Apollo.d.push({
            col_type: "blank_block"
        })
        try {
            var series = pdfh(html, 'body&&tr:contains(系列)&&a&&Text');
            if (series) {
                Apollo.d.push({
                    title: '系列:‘‘’’<b><middle><font color="#1E90FF">\t' + series + '</font></middle></b>',
                    url: getHome(url) + pdfh(html, 'body&&tr:contains(系列)&&a&&href') + yiji,
                    col_type: 'scroll_button',
                    extra: {
                        pageTitle: series
                    }
                })
            }
        } catch {}
        Apollo.d.push({
            col_type: "blank_block"
        })

        Apollo.CiliParse(html)
        Apollo.d.push({
            title: '““””' + "我是有底线的".fontcolor("grey")
                .small(),
            url: Apollo.empty,
            col_type: "text_center_1",
            extra: {
                lineVisible: false
            }
        })
        setResult(Apollo.d)
    },

    //磁力列表
    CiliParse: (html) => {
        function magnetDecode(id) {
            let urlEncodedString = id;
            let encodedString = urlEncodedString.replace(/-/g, '+')
                .replace(/_/g, '/') + '=='.substring(0, (3 * urlEncodedString.length) % 4);
            let decodedString = window0.atob(encodedString);
            return decodedString
        }
        const magnet = pdfa(html, '#Magnet-cont&&tr,1:');
        magnet.forEach(item => {
            var url = magnetDecode(pdfh(item, "a&&id"));
            Apollo.d.push({
                title: pdfh(item, "a&&Text")
                    .replace(/\[(?:\[.*?\])?(.*?)\].*/, "$1"),
                desc: pdfh("<table>" + item + "</table>", "td&&Text") + "\t\t" + pdfh(item, "a&&Text")
                    .replace(/.*\[(\d+\.?(\d+)?(\s+)?(G|M|K)(\w+)?)\,?.*?\].*/i, "$1") + "\t\t" + pdfh(item, "a&&Text")
                    .replace(/.*\[(\d+-\d+-\d+).*?\].*/, "$1"),
                img: "https://img.vinua.cn/images/Ocqpj.png",
                url: url,
                col_type: "avatar",
                extra: {
                    lineVisible: false,
                    longClick: [{
                        title: 'Pikpak',
                        js: $.toString((url) => {
                            return "pikpakapp://mypikpak.com/xpan/main_tab?tab=1&add_url=" + url;
                        }, url)
                    }, {
                        title: '幻影',
                        js: $.toString((url) => {
                            openAppIntent('com.xingsu.downloader', 'com.e4a.runtime.android.mainActivity', {
                                intentData: url
                            })
                            return "hiker://empty";
                        }, url)
                    }, {
                        title: '小白',
                        js: $.toString((url) => {
                            openAppIntent('xb.download.com', 'io.dcloud.PandoraEntry', {
                                intentData: url
                            })
                            return "hiker://empty";
                        }, url)
                    }, {
                        title: '迅雷',
                        js: $.toString((url) => {
                            openAppIntent('com.xunlei.downloadprovider', 'com.xunlei.downloadprovider.launch.LaunchActivity2', {
                                intentData: url
                            })
                            return "hiker://empty";
                        }, url)
                    }, {
                        title: '二驴',
                        js: $.toString((url) => {
                            openAppIntent('com.qikcloud.qik', 'com.e4a.runtime.android.mainActivity', {
                                intentData: url
                            })
                            return "hiker://empty";
                        }, url)
                    }, {
                        title: '悟空',
                        js: $.toString((url) => {
                            openAppIntent('com.yfoo.wkDownloader', 'com.yfoo.wkDownloader.MainActivity', {
                                intentData: url
                            })
                            return "hiker://empty";
                        }, url)
                    }]
                }
            })
        })
    },

    // 外链播放
    CodeParse: (识别码) => {
        Apollo.d.push({
            col_type: 'blank_block',
        })
        var codelazy = fetch('hiker://files/rules/Apollo/𝐂𝐨𝐝𝐞𝐋𝐚𝐳𝐲.js')
            .replace(/d\.push/g, "Apollo.d.push") || "";

        function downcode() {
            var js = fetch("https://mirror.ghproxy.com/https://raw.githubusercontent.com/ApolloRioo/R/master/𝐂𝐨𝐝𝐞𝐋𝐚𝐳𝐲");
            writeFile('hiker://files/rules/Apollo/𝐂𝐨𝐝𝐞𝐋𝐚𝐳𝐲.js', js);
            toast("远程数据已更新到本地")
            codelazy = fetch('hiker://files/rules/Apollo/𝐂𝐨𝐝𝐞𝐋𝐚𝐳𝐲.js')
                .replace(/d\.push/g, "Apollo.d.push")
        }
        if (!codelazy) {
            downcode()
        }
        try {
            eval(codelazy)
        } catch {
            downcode()
            eval(codelazy)
            log("读取失败更新远程数据")
        }
        CodeLazy(识别码)
    }

}

$.exports = Apollo