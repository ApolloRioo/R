const javguru = {
    empty: "hiker://empty",
    version: "20250105",
    url: "https://jav.guru/",
    d: [],
    data: {
        category: getMyVar('JavGuru.category', '0'),
        subCate: getMyVar('JavGuru.subCate', '0'),
    },
    baseParse: () => {
        const page = parseInt(MY_URL.split('##')[2])
        let categoryList = [{
            "path": "https://jav.guru/",
            "sub": [],
            "title": "Home",
            "type": "video"
        }, {
            "path": "https://jav.guru/category/english-subbed/",
            "sub": [],
            "title": "SUBS",
            "type": "video"
        }, {
            "path": "https://jav.guru/category/jav-uncensored/",
            "sub": [{
                "path": "https://jav.guru/category/jav-uncensored/",
                "title": "UNCENSORED"
            }, {
                "path": "https://jav.guru/category/fc2/",
                "title": "FC2"
            }, {
                "path": "https://jav.guru/studio/carib/",
                "title": "CARIBBEAN"
            }, {
                "path": "https://jav.guru/studio/10mu/",
                "title": "10MUSUME"
            }, {
                "path": "https://jav.guru/studio/1pon/",
                "title": "1PONDO"
            }, {
                "path": "https://jav.guru/studio/heyzo/",
                "title": "HEYZO"
            }],
            "title": "UNCENSORED",
            "type": "video"
        }, {
            "path": "https://jav.guru/category/amateur/",
            "sub": [{
                "path": "https://jav.guru/category/amateur/",
                "title": "AMATEUR"
            }, {
                "path": "https://jav.guru/studio/259luxu/",
                "title": "259LUXU"
            }, {
                "path": "https://jav.guru/studio/200gana/",
                "title": "200GANA"
            }, {
                "path": "https://jav.guru/studio/300maan/",
                "title": "300MAAN"
            }, {
                "path": "https://jav.guru/studio/300mium/",
                "title": "300MIUM"
            }, {
                "path": "https://jav.guru/studio/229scute/",
                "title": "229SCUTE"
            }, {
                "path": "https://jav.guru/category/fc2/",
                "title": "FC2"
            }],
            "title": "AMATEUR",
            "type": "video"
        }, {
            "path": "https://jav.guru/category/4k/",
            "sub": [],
            "title": "4K",
            "type": "video"
        }, {
            "path": "https://jav.guru/most-watched-rank/",
            "sub": [],
            "title": "HOT",
            "type": "hot"
        }, {
            "path": "",
            "sub": [{
                "path": "https://jav.guru/jav-actress-list/",
                "title": "ACTRESS"
            }, {
                "path": "https://jav.guru/jav-actors/",
                "title": "ACTOR"
            }, {
                "path": "https://jav.guru/jav-tags-list/",
                "title": "TAG"
            }, {
                "path": "https://jav.guru/jav-studio-list/",
                "title": "LABEL"
            }, {
                "path": "https://jav.guru/jav-makers-list/",
                "title": "MAKER"
            }, {
                "path": "https://jav.guru/jav-series/",
                "title": "SERIES"
            }],
            "title": "TAGS",
            "type": "tags"
        }]
        const currentCate = categoryList[javguru.data.category]
        let url
        let type = currentCate.type
        let path = currentCate.path
        if (currentCate.sub.length > 0) {
            url = getMyVar("url", currentCate.sub[javguru.data.subCate].path)
            path = currentCate.sub[javguru.data.subCate].path
        } else {
            url = getMyVar("url", currentCate.path)
        }

        if (page === 1) {
            categoryList.forEach((cate, index) => {
                javguru.d.push({
                    title: parseInt(javguru.data.category) === index ? '‘‘’’<strong><font color="#ff1493">' + cate.title + '</font></strong>' : cate.title,
                    url: $(javguru.empty + "#noLoading#")
                        .lazyRule((index) => {
                            putMyVar("JavGuru.category", index.toString())
                            putMyVar("JavGuru.subCate", '0')
                            clearMyVar("sort")
                            clearMyVar("url")
                            refreshPage(true)
                            return "hiker://empty"
                        }, index),
                    col_type: 'scroll_button',
                })
            })
            if (currentCate.sub.length > 0) {
                javguru.d.push({
                    col_type: 'blank_block',
                })
                currentCate.sub.forEach((cate, index) => {
                    javguru.d.push({
                        title: parseInt(javguru.data.subCate) === index ? '‘‘’’<strong><font color="#ff1493">' + cate.title + '</font></strong>' : cate.title,
                        url: $(javguru.empty + "#noLoading#")
                            .lazyRule((index) => {
                                putMyVar("JavGuru.subCate", index.toString())
                                clearMyVar("sort")
                                clearMyVar("url")
                                refreshPage(true)
                                return "hiker://empty"
                            }, index),
                        col_type: 'scroll_button',
                    })
                })
            }
        }

        if (url.includes("超级无敌回环大搜索")) {
            key = getMyVar("key")
            if (!key) {
                if (currentCate.sub.length > 0) {
                    url = currentCate.sub[javguru.data.subCate].path
                    path = currentCate.sub[javguru.data.subCate].path
                } else {
                    url = currentCate.path
                }
            } else {
                url1 = "https://jav.guru/actress-search/?taxonomy_search=" + key
                url = "https://jav.guru/?s=" + key
                type = "search"
            }
        }

        if (page !== 1) {
            url = url.replace(/(\?|$)/, "page/" + page + "/$1")
        }

        const html = fetch(url, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
            }
        })
        log(url)

        if (page === 1) {
            javguru.videoSort(html, url)
            javguru.d.push({
                title: '𝐉𝐚𝐯𝐆𝐮𝐫𝐮',
                desc: '搜索女优或者番号',
                col_type: 'input',
                url: $.toString(() => {
                    putMyVar('key', input);
                    putMyVar('url', "超级无敌回环大搜索");
                    refreshPage(true);
                    return 'hiker://empty'
                }),
                extra: {
                    defaultValue: getMyVar('key', ''),
                    onChange: "putMyVar('key', input)"
                }
            })
        };

        switch (type) {
            case 'video':
                javguru.videoType(html)
                break
            case 'hot':
                if (page === 1) {
                    javguru.videoHot(html)
                }
                break
            case 'tags':
                if (/actress|actors/.test(path)) {
                    javguru.avatarType(html)
                } else {
                    javguru.tagsType(html)
                }
                break
            case 'search':
                if (page === 1) {
                    javguru.d.push({
                        title: "🗯\t\t\t\t\t\t演员\t\t\t\t\t\t🗯",
                        url: "hiker://empty",
                        col_type: "rich_text"
                    });
                    var htm = fetch(url1, {
                        headers: {
                            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
                        }
                    })
                    javguru.avatarType(htm)
                    javguru.d.push({
                        title: "🗯\t\t\t\t\t\t影片\t\t\t\t\t\t🗯",
                        url: "hiker://empty",
                        col_type: "rich_text"
                    });
                }
                javguru.videoType(html)
                break
            default:
                javguru.videoType(html)
        }
        setResult(javguru.d)
    },

    //一级sort
    videoSort: (html, url) => {
        javguru.d.push({
            col_type: "blank_block",
        })
        const sort = pdfa(html, '#sortby&&option')
        sort.forEach((item, index) => {
            var title = pdfh(item, 'Text');
            javguru.d.push({
                title: getMyVar('sort', '0') == index ? '‘‘’’<strong><font color="#ff1493">' + title + '</font></strong>' : title,
                url: url.replace(/(.*?)\?.*/, "$1") + pdfh(item, 'option&&value') + $('#noLoading#')
                    .lazyRule((index) => {
                        putMyVar('sort', index);
                        putMyVar("url", input);
                        refreshPage(false);
                        return 'hiker://empty'
                    }, index),
                col_type: 'scroll_button'
            })
        })
    },

    videoSort1: (html, url) => {
        javguru.d.push({
            col_type: "blank_block",
        })
        const sort = pdfa(html, '#sortby&&option')
        sort.forEach((item, index) => {
            var title = pdfh(item, 'Text');
            javguru.d.push({
                title: getMyVar('ysort', '0') == index ? '‘‘’’<strong><font color="#ff1493">' + title + '</font></strong>' : title,
                url: url.replace(/(.*?)\?.*/, "$1") + pdfh(item, 'option&&value') + $('#noLoading#')
                    .lazyRule((index) => {
                        putMyVar('ysort', index);
                        putMyVar("yurl", input);
                        refreshPage(false);
                        return 'hiker://empty'
                    }, index),
                col_type: 'scroll_button'
            })
        })
    },

    //一级Hot
    videoHot: (html, url) => {
        javguru.d.push({
            col_type: "blank_block",
        })
        var tabs = pdfa(html, ".responsive-tabs&&h2")
            .map(t => pdfh(t, "Text"));
        var conts = pdfa(html, ".responsive-tabs&&.wpp-list");
        var lists = conts.map(arr => pdfa(arr, "body&&li"));

        function setTabs(tabs) {
            for (var i in tabs) {
                javguru.d.push({
                    title: getMyVar("tab", '0') == i ? '‘‘’’<strong><font color="#FF00FF">' + tabs[i] + '</font></strong>' : tabs[i],
                    col_type: 'scroll_button',
                    url: $("#noLoading#")
                        .lazyRule((i) => {
                            putMyVar("tab", i)
                            refreshPage(false);
                            return 'hiker://empty'
                        }, i)
                })
            }
        }

        function setLists(lists, index) {
            var list = lists[index];

            function playLists() {
                for (var j = 0; j < list.length; j++) {
                    javguru.d.push({
                        title: pdfh(list[j], "a,-1&&Text"),
                        //  desc: desc,
                        img: pdfh(list[j], "img&&src"),
                        url: pdfh(list[j], "a&&href") + $('')
                            .rule(() => {
                                const javguru = $.require('hiker://page/javguru?rule=𝐉𝐚𝐯𝐆𝐮𝐫𝐮')
                                javguru.videoParse(MY_URL)
                                setResult(javguru.d)
                            }),
                        col_type: "movie_2",
                        extra: {
                            pageTitle: pdfh(list[j], "a,-1&&Text"),
                        }
                    });
                }
            }
            playLists()
        }
        setTabs(tabs, url);
        setLists(lists, getMyVar('tab', '0'));
    },

    //一级tags
    tagsType: (html) => {
        //随机颜色
        var getRangeColors = function() {
            return '#' + ('00000' + (Math.random() * 0x1000000 << 0)
                    .toString(16))
                .substr(-6);
        }
        if (MY_PAGE === 1) {
            var list = pdfa(html, "#main&&li");
            list.forEach(item => {
                javguru.d.push({
                    title: '““””<middle><font color=' + getRangeColors() + '>' + pdfh(item, 'a&&Text') + '</font></middle>',
                    url: $(pdfh(item, 'a&&href') + '#fypage#noHistory#')
                        .rule(() => {
                            const javguru = $.require('hiker://page/javguru?rule=𝐉𝐚𝐯𝐆𝐮𝐫𝐮')
                            javguru.avatarParse(MY_URL)
                            setResult(javguru.d)
                        }),
                    col_type: "flex_button"
                })
            })
        }
    },

    //一级演员页面
    avatarType: (html) => {
        var list = pdfa(html, '.actress-page&&a')
        list.forEach(item => {
            javguru.d.push({
                title: (pdfh(item, '.actress-details&&span[style]:not(:has(.video))&&Text') ? pdfh(item, '.actress-details&&span[style]:not(:has(.video))&&Text')
                        .slice(0, 8) : pdfh(item, '.actress-details&&span&&Text')) + "\n" + pdfh(item, '.actress-details&&span:matches(videos)&&Text')
                    .replace("videos", "部") + "\t\t" + pdfh(item, '.actress-details&&span:matches(old)&&Text')
                    .replace("years old", "岁"),
                desc: "",
                pic_url: pdfh(item, '.actress-pic&&img&&src') + '@Referer=',
                url: $(pdfh(item, 'a&&href') + '#fypage#noHistory#')
                    .rule(() => {
                        const javguru = $.require('hiker://page/javguru?rule=𝐉𝐚𝐯𝐆𝐮𝐫𝐮')
                        javguru.avatarParse(MY_URL)
                        setResult(javguru.d)
                    }),
                col_type: 'card_pic_3'
            })
        })
    },

    //一级页面
    avatarParse: (url) => {
        addListener("onClose", $.toString(() => {
            clearMyVar("ysort");
            clearMyVar("yurl");
        }));
        url = getMyVar("yurl", url)
            .replace(/(.*?)#.*/, "$1");
        if (MY_PAGE !== 1) {
            url = url.replace(/(\?|$)/, "page/" + MY_PAGE + "/$1")
        }
        const html = fetch(url, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
            }
        })
        log(url)
        if (MY_PAGE === 1) {
            javguru.videoSort1(html, url)
        }
        javguru.videoType(html)
    },

    //搜索
    searchParse: (url) => {
        url = url.replace("hiker://empty##", "")
        log(url)
        const html = fetch(url, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
            }
        })
        javguru.videoType(html)
        setResult(javguru.d)
    },

    //一级列表
    videoType: (html) => {
        const list = pdfa(html, '#main&&.row')
        list.forEach(item => {
            javguru.d.push({
                title: pdfh(item, 'img&&alt'),
                url: $(pdfh(item, 'a&&href') + '#noHistory#')
                    .rule(() => {
                        const javguru = $.require('hiker://page/javguru?rule=𝐉𝐚𝐯𝐆𝐮𝐫𝐮')
                        javguru.videoParse(MY_URL)
                        setResult(javguru.d)
                    }),
                pic_url: pdfh(item, '.imgg&&img&&src').replace(/-\d+x\d+\.jpg/, ".jpg") + '@Referer=' + javguru.url,
                desc: pdfh(item, '.date&&Text'),
                col_type: 'movie_2',
                extra: {
                    pageTitle: pdfh(item, 'img&&alt'),
                }
            })
        })
    },

    //二级
    videoParse: (url) => {
        const html = fetch(url, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'
            }
        })
        log(url)
        const title = pdfh(html, ".posts&&h1&&Text");
        var desct = title.replace(/(?:\[.*?\])?(?:\(.*?\))?(.*)/, "$1")
        javguru.d.push({
            title: '““””' + title.fontcolor("#E57A1A").small(),
            url: "hiker://empty" + $('#noLoading#')
                .lazyRule((desct) => {
                    var desc = findItem('transdesc')
                        .desc
                    if (!desc) {
                        const Apollo = $.require('hiker://page/javguru?rule=𝐉𝐚𝐯𝐆𝐮𝐫𝐮')
                        var translates = Apollo.translate(desct)
                        updateItem("transdesc", {
                            desc: '““””' + translates.fontcolor("red"),
                        })
                    } else {
                        updateItem("transdesc", {
                            desc: '',
                        })
                    }
                    return "hiker://empty"
                }, desct),
            col_type: 'text_1',
            extra: {
                lineVisible: false,
                id: 'transdesc',
                longClick: [{
                    title: '网页',
                    js: $.toString(() => {
                        return "web://" + MY_URL
                    })
                }, {
                    title: '复制',
                    js: $.toString((title) => {
                        return "copy://" + title;
                    }, title)
                }, {
                    title: '百度翻译',
                    js: $.toString((title) => {
                        return "x5://https://fanyi.baidu.com/#en/zh/" + title
                    }, title)
                }, {
                    title: 'Deepl翻译',
                    js: $.toString((title) => {
                        return "x5://https://www.deepl.com/zh/translator-mobile#cn/zh/" + title
                    }, title)
                }, {
                    title: '谷歌翻译',
                    js: $.toString((title) => {
                        return "x5://https://translate.google.com/?hl=zh-CN&sl=cn&tl=zh-CN&text=" + title
                    }, title)
                }]
            }
        })
        const img = pdfh(html, ".posts&&img&&src");
        javguru.d.push({
            img: img,
            url: javguru.empty,
            col_type: "pic_1_full",
        })

        var lazy = $('')
            .lazyRule((url) => {
                var src = fetch(input)
                    .match(/iframe.*?src="(.*?=)/)[1]
                var id = input.replace(/.*?=(.*?)&.*/, "$1")
                id = id.split('')
                    .reverse()
                    .join('');
                var url = `${src}${id}`;
                var location = JSON.parse(fetch(url, {
                        headers: {
                            "Referer": input,
                        },
                        onlyHeaders: true
                    }))
                    .url
                log(location)
                if (location.includes("emturbovid.com")) {
                    //TV线路
                    var html = fetch(location, {
                        headers: {
                            "Referer": "https://jav.guru/"
                        }
                    })
                    var path = html.match(/'.*?(\/.*?\.m3u8)/)[1];
                    var playUrl = path.includes("//") ? "https:" + path : getHome(location) + path
                    return playUrl + ";{Referer@" + location + "}"
                } else if (location.includes("streamtape")) {
                    //ST线路
                    var html = fetch(location, {
                        headers: {
                            'Referer': "https://jav.guru/"
                        }
                    })
                    var pattern = html.match(/\('#(.*)'\)/)[1]
                    var src = "var srclink = " + html.match(new RegExp("'" + pattern + ".*?=([^;]+)"))[1]
                    eval(src)
                    var link = "https:" + srclink + "&stream=1"
                    var urlPlay = JSON.parse(fetch(link, {
                            headers: {
                                "Referer": location,
                            },
                            onlyHeaders: true
                        }))
                        .url
                    return urlPlay + ";{Referer@" + location + "}"
                } else if (/d0000d|dood|ds2play/.test(location)) {
                    //DD线路
                    var html = fetch(location, {
                        headers: {
                            'Referer': "https://jav.guru/"
                        }
                    })
                    var pass_md5 = getHome(location) + html.match(/\/pass_md5[^"']+/)[0]
                    var token = html.match(/cookieIndex.*?\'(.*?)\'/)[1]
                    var data = fetch(pass_md5, {
                        headers: {
                            "Referer": location
                        }
                    })

                    function makePlay(token) {
                        for (var a = "",
                                t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
                                n = t.length,
                                o = 0; 10 > o; o++)
                            a += t.charAt(Math.floor(Math.random() * n));
                        return a + "?token=" + token + "&expiry=" + Date.now();
                    };
                    var urlPlay = data + makePlay(token)
                    return urlPlay + "#isVideo=true#;{Referer@" + location + "}"
                } else if (/cindyeyefinal|fc2stream|javclan/.test(location)) {
                    //SB线路//FST线路//VOE线路
                    //log(location)
                    var Playhtml = fetch(location, {
                        headers: {
                            'Referer': "https://jav.guru/"
                        }
                    })
                    //log(Playhtml)
                    var script = pdfh(Playhtml, "body>script&&Html").replace("eval", "")
                    var uas = eval(script)
                    var jwplayer = uas.match(/"(https?.*m3u8.*?)"/)[1]
                    //log(jwplayer)  
                    return jwplayer + ";{Referer@" + location + "}"

                } else if (/vtbe\.to|maxstream|streamhihi/.test(location)) {
                    //JK线路//VTU线路//LU线路
                    function evaldecode(text) {
                        var code = '';
                        var s = text.replace(/^eval/, '')
                            .replace('return p', 'code+=p')
                        eval(s);
                        return code;
                    }

                    const hostRegex = (url) => {
                        const match = url.match(/^(?:https?:\/\/)?(?:www\.)?([a-zA-Z0-9-]{1,63}\.)+[a-zA-Z]{2,6}/i);
                        return match ? match[0] : url;
                    };

                    let host = hostRegex("https://jav.guru/")

                    var html = fetch(location, {
                        headers: {
                            Referer: host,
                        }
                    })
                    var iframe = pdfa(html, "iframe");

                    if (iframe.length > 0) {
                        html = fetch(pdfh(iframe[0], "iframe&&src"), {
                            headers: {
                                Referer: host,
                            }
                        })
                    }

                    var scripts = pdfa(html, "body&&script");
                    let script = scripts.filter(x => x.includes('eval'))
                        .map(m => pdfh(m, "script&&Html"))[0];
                    if (script == undefined) {
                        return 'toast://无数据'
                    }

                    let m3u8 = /file:"(.*?)"/g.exec(evaldecode(script))[1];
                    return m3u8

                } else {
                    log("革命尚未成功,同志仍需努力=>" + location)
                    return "confirm://咳,本线路这个地址并没有解析，日志已打印出，敬请查看.js:'hiker://empty' "
                }
            }, url)

        var Playlined = ["STREAM TV", "STREAM ST", "STREAM DD", "STREAM SB", "STREAM LU", "STREAM JK", "Streamtape", "VTU"]
        var list = pdfa(html, ".ssmenu&&a[id]")
        var code = html.match(/iframe_url":"[^"]+/g)
            .map(m => m.match(/iframe_url":"(.*)/)[1])
        list.forEach((item, index) => {
            var title = pdfh(item, 'Text')
            var url = base64Decode(code[index])
            javguru.d.push({
                title: Playlined.indexOf(title) >= 0 ? '🗯““””' + title.bold()
                    .fontcolor("#98C0FE") + "🗯" : '🗯““””' + title.bold() + "🗯",
                url: url + lazy,
                col_type: "text_2"
            })
        })
        if (list.length % 2 != 0) {
            javguru.d.push({
                title: '🗯““””' + "Random🗯".bold()
                    .fontcolor("#FF00ED"),
                url: "https://jav.guru/random/" + $('')
                    .rule(() => {
                        const javguru = $.require('hiker://page/javguru?rule=𝐉𝐚𝐯𝐆𝐮𝐫𝐮')
                        javguru.videoParse(MY_URL)
                        setResult(javguru.d)
                    }),
                extra: {
                    inheritTitle: false
                },
                col_type: "text_2"
            })
        }

        var code = pdfh(html, ".infoleft&&li:matches(Code)&&Text")
        var date = pdfh(html, ".infoleft&&li:matches(Date)&&Text")
        if (code) {
            javguru.d.push({
                title: '““””' + (code + "\t\t\t\t" + date)
                    .fontcolor("#63A233"),
                url: "copy://" + code.replace("Code: ", ""),
                col_type: "text_1",
                extra: {
                    lineVisible: false
                }
            })
        }

        var yiji = $('#fypage#noHistory#')
            .rule(() => {
                const javguru = $.require('hiker://page/javguru?rule=𝐉𝐚𝐯𝐆𝐮𝐫𝐮')
                javguru.avatarParse(MY_URL)
                setResult(javguru.d)
            })

        var list = pdfa(html, ".infoleft&&li:matches(Director|Label|Studio)")
        list.forEach(item => {
            javguru.d.push({
                title: '““””' + pdfh(item, "Text")
                    .fontcolor("#8A2BE2"),
                url: pdfh(item, "a&&href") + yiji,
                col_type: "scroll_button",
                extra: {
                    pageTitle: pdfh(item, "Text")
                }
            })
        })

        javguru.d.push({
            col_type: "blank_block",
        })

        var list = pdfa(html, ".infoleft&&li:matches(Tags)&&a")
        list.forEach((item, index) => {
            javguru.d.push({
                title: index == 0 ? "Tags:" + '““””' + pdfh(item, "Text")
                    .fontcolor("#1E8884") : '““””' + pdfh(item, "Text")
                    .fontcolor("#1E8884"),
                url: pdfh(item, "a&&href") + yiji,
                col_type: "scroll_button",
                extra: {
                    pageTitle: pdfh(item, "Text")
                }
            })
        })

        javguru.d.push({
            col_type: "blank_block",
        })

        var list = pdfa(html, ".infoleft&&li:matches(Actress:)&&a")
        list.forEach((item, index) => {
            javguru.d.push({
                title: index == 0 ? "Actress:" + '““””' + pdfh(item, "Text")
                    .fontcolor("#c13141") : '““””' + pdfh(item, "Text")
                    .fontcolor("#c13141"),
                url: pdfh(item, "a&&href") + yiji,
                col_type: "scroll_button",
                extra: {
                    pageTitle: pdfh(item, "Text")
                }
            })
        })

        javguru.d.push({
            col_type: "blank_block",
        })

        var list = pdfa(html, ".infoleft&&li:matches(Actor:)&&a")
        list.forEach((item, index) => {
            javguru.d.push({
                title: index == 0 ? "Actor:" + '““””' + pdfh(item, "Text")
                    .fontcolor("#1E90FF") : '““””' + pdfh(item, "Text")
                    .fontcolor("#1E90FF"),
                url: pdfh(item, "a&&href") + yiji,
                col_type: "scroll_button",
                extra: {
                    pageTitle: pdfh(item, "Text")
                }
            })
        })

        javguru.d.push({
            col_type: "blank_block",
        })

        var Series = pdfh(html, ".infoleft&&li:matches(Series:)&&Text")
        if (Series) {
            javguru.d.push({
                title: '““””' + Series.fontcolor("#00d0f4"),
                url: pdfh(html, ".infoleft&&li:matches(Series:)&&a&&href") + yiji,
                col_type: "scroll_button",
                extra: {
                    lineVisible: false
                }
            })
        }

        const async = pdfa(html, ".posts&&.wp-content&&img[src]")
        async.forEach((item, index) => {
            javguru.d.push({
                img: pdfh(item, "img&&src"),
                url: javguru.empty,
                col_type: "pic_1_full"
            })
        })

        setResult(javguru.d)
    },

    //翻译
    translate: (text) => {
        var switchtrans = true;
        if (switchtrans == true || switchtrans == "彩云小译") {
            try {
                var to = 'zh'
                var from = 'auto'

                function init_data(source_lang, target_lang) {
                    return {
                        source: '',
                        detect: true,
                        os_type: 'ios',
                        device_id: 'F1F902F7-1780-4C88-848D-71F35D88A602',
                        trans_type: source_lang + '2' + target_lang,
                        media: 'text',
                        request_id: 424238335,
                        user_id: '',
                        dict: true,
                    }
                }

                function getRandomNumber() {
                    const rand = Math.floor(Math.random() * 99999) + 100000
                    return rand * 1000
                }
                const post_data = init_data(from, to)
                post_data.source = text
                post_data.request_id = getRandomNumber()
                let res = fetch('https://interpreter.cyapi.cn/v1/translator', {
                    method: 'POST',
                    header: {
                        'Content-Type': 'application/json',
                        'x-authorization': 'token ssdj273ksdiwi923bsd9',
                        'user-agent': 'caiyunInterpreter/5 CFNetwork/1404.0.5 Darwin/22.3.0',
                    },
                    body: post_data,
                })
                let result = JSON.parse(res)
                    .target
                return result + "【☁️】"
            } catch {
                log("翻译失败，使用原文");
                return text
            }
        } else if (switchtrans == "小牛翻译") {
            try {
                var url = "https://api.niutrans.com/NiuTransServer/translation";
                var api = config.api;
                if (api) {
                    if (text != "") {
                        var lang = "https://test.niutrans.com/NiuTransServer/language?src_text=" + text + "&source=text";
                        var from = JSON.parse(fetch(lang, {
                                timeout: 1000
                            }))
                            .language;
                        var result = post(url, {
                            body: {
                                src_text: text,
                                from: from,
                                to: "zh",
                                apikey: api,
                            },
                            timeout: 1223
                        });
                        var data = JSON.parse(result)
                        if (data.tgt_text) {
                            return data.tgt_text + "【🐮】"
                        } else {
                            log("翻译失败，使用原文");
                            return text
                        }
                    } else {
                        log("翻译失败，原文为空");
                        return text
                    }
                } else {
                    toast("预处理请填写翻译api")
                    return text
                }
            } catch {
                log("翻译失败，使用原文");
                return text
            }
        } else {
            return text
        }
    },

}

$.exports = javguru