const Apollo = {
    version: 20250216,
    empty: "hiker://empty",
    url: "https://avtoday.io",
    d: [],
    lazy: $('#noHistory#')
        .lazyRule(() => {
            var html = fetchCodeByWebView(input.replace("video/", "player?s="), {
                headers: {
                    Referer: "https://avtoday.io/"
                }
            })
            var script = html.match(/var m3u8_url.*/)[0]
            eval(script)
            return m3u8_url + ";{Origin@https://avtoday.io&&Referer@https://avtoday.io/}"
        }),
    data: {
        category: getMyVar('Apo.category', '0'),
        subCate: getMyVar('Apo.subCate', '0'),
    },
    getRangeColors: function() {
        return '#' + ('00000' + (Math.random() * 0x1000000 << 0)
                .toString(16))
            .substr(-6);
    }, //随机颜色
    baseParse: () => {
        const page = parseInt(MY_URL.split('##')[2])
        let categoryList = [{
            "title": "首页",
            "path": "/",
            "type": "home",
            "sub": []
        }, {
            "title": "📋类型",
            "path": "",
            "type": "video",
            "sub": [{
                "title": "无码",
                "path": "/catalog/无码"
            }, {
                "title": "制服",
                "path": "/catalog/制服"
            }, {
                "title": "丝袜",
                "path": "/catalog/丝袜"
            }, {
                "title": "萝莉型",
                "path": "/catalog/萝莉型"
            }, {
                "title": "多人",
                "path": "/catalog/多人"
            }, {
                "title": "长腿",
                "path": "/catalog/长腿"
            }, {
                "title": "大屁股",
                "path": "/catalog/大屁股"
            }, {
                "title": "巨乳",
                "path": "/catalog/巨乳"
            }, {
                "title": "自慰",
                "path": "/catalog/自慰"
            }, {
                "title": "业余视频",
                "path": "/catalog/业余视频"
            }, {
                "title": "足交",
                "path": "/catalog/足交"
            }, {
                "title": "潮吹",
                "path": "/catalog/潮吹"
            }, {
                "title": "痴女",
                "path": "/catalog/痴女"
            }, {
                "title": "熟女",
                "path": "/catalog/熟女"
            }, {
                "title": "貧乳",
                "path": "/catalog/貧乳"
            }, {
                "title": "及膝袜",
                "path": "/catalog/及膝袜"
            }]
        }, {
            "title": "🎥新片",
            "path": "/new",
            "type": "video",
            "sub": []
        }, {
            "title": "🔥人气",
            "path": "/hot",
            "type": "video",
            "sub": []
        }, {
            "title": "🈚无码",
            "path": "/no-mosaic",
            "type": "video",
            "sub": []
        }, {
            "title": "🤑免费",
            "path": "/free",
            "type": "video",
            "sub": []
        }]
        const currentCate = categoryList[Apollo.data.category]
        let url
        let type = currentCate.type
        let path = currentCate.path
        if (currentCate.sub.length > 0) {
            url = Apollo.url + getMyVar("url", currentCate.sub[Apollo.data.subCate].path)
            path = currentCate.sub[Apollo.data.subCate].path
        } else {
            url = Apollo.url + getMyVar("url", currentCate.path)
        }
        url = url.replace(/https?.*(https?.*)/, "$1")
        if (page === 1) {
            categoryList.forEach((cate, index) => {
                Apollo.d.push({
                    title: parseInt(Apollo.data.category) === index ? '““””' + cate.title.fontcolor(Apollo.getRangeColors()) : cate.title,
                    url: $(Apollo.empty + "#noLoading#")
                        .lazyRule((index) => {
                            putMyVar("Apo.category", index.toString())
                            putMyVar("Apo.subCate", '0')
                            clearMyVar("url")
                            refreshPage(true)
                            return "hiker://empty"
                        }, index),
                    col_type: 'scroll_button',
                })
            })
            if (currentCate.sub.length > 0) {
                Apollo.d.push({
                    col_type: 'blank_block',
                })
                currentCate.sub.forEach((cate, index) => {
                    Apollo.d.push({
                        title: parseInt(Apollo.data.subCate) === index ? '““””' + cate.title.fontcolor(Apollo.getRangeColors()) : cate.title,
                        url: $(Apollo.empty + "#noLoading#")
                            .lazyRule((index) => {
                                putMyVar("Apo.subCate", index.toString())
                                clearMyVar("url")
                                refreshPage(true)
                                return "hiker://empty"
                            }, index),
                        col_type: 'scroll_button',
                    })
                })
            }
        }
        if (MY_PAGE == 1 && !/category/.test(url)) {
            Apollo.d.push({
                title: "🔍",
                url: $.toString((url) => {
                    if (input.trim() != "") {
                        putMyVar('keyword', input);
                        var searchUrl = getHome(url) + "/search?s=" + input
                        putMyVar("url", searchUrl);
                        refreshPage();
                        return "hiker://empty"
                    } else {
                        return "confirm://搜索内容为空.js:'hiker://empty'"
                    }
                }, url),
                desc: '搜索番号结果更多...',
                col_type: "input",
                extra: {
                    defaultValue: getMyVar('keyword', '') || "",
                }
            });
        }
        //翻页
        /*
        if (page !== 1) {
            url = url.includes("?") ? url + "&page=" + page : url + "?&page=" + page
        }
        const html = fetch(url, {
            headers: {
                "Cookie": fetchPC('hiker://files/rules/Apollo/Cookie/javlibrary_cookie.txt') || '',
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046279 Mobile Safari/537.36",
            }
        })*/
        let nextPage = getMyVar("nextPage", "");
        if (nextPage && MY_PAGE > 1) {
            if (url.includes("random")) {
                url = url
            } else {
                url = nextPage;
            };
        } else if (MY_PAGE > 1) {
            if (url.endsWith("/zh/")) {
                url = url
            } else {
                url = "没有下一页哦😑"
            };
        }

        /*
          var html = fetch(url, {
              headers: {
                  "cookie": fetchPC('hiker://files/rules/Apollo/Cookie/avtoday_cookie.txt') || '',
                  "User-Agent": "Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046285 Mobile Safari/537.36_",
              }
          })*/
        var html = fetchCodeByWebView(url)
        log(url)

        try {
            var next = pd(html, ".justify-between&&li:matches(Next)&&a&&href")
            putMyVar("nextPage", next);
        } catch {
            clearMyVar("nextPage");
            //log("可能不存在下一页或者下一页定位有问题");
        }

        if (url.includes("search?")) {
            Apollo.d.push({
                title: '““””' + "搜寻结果".fontcolor("#FF00FF"),
                url: "hiker://empty",
                col_type: "text_1",
                extra: {
                    lineVisible: false
                }
            })
        }

        switch (type) {
            case 'home':
                if (MY_PAGE == 1 && !/search/.test(url)) {
                    try {
                        Apollo.lunboType(html)
                    } catch {}
                }
                Apollo.videoType(url, html)
                break
            case 'video':
                Apollo.videoType(url, html)
                break
            default:
                Apollo.videoType(url, html)
        }
        setResult(Apollo.d)
    },

    //首页轮播
    lunboType: (html) => {
        var lundata = pdfa(html, ".featured-swiper&&.swiper-slide").map((x) => {
            var urll = pd(x, "a&&href");
            return {
                title: pdfh(x, ".slide-content&&Text").split("").map(b => b.fontcolor(Apollo.getRangeColors()).small()).join(""),
                img: pd(x, "img&&src"),
                url: urll + Apollo.lazy,
            }
        });

        function banner(title, start, arr, data, cfg) {
            let id = title + 'lunbo';
            var rnum = Math.floor(Math.random() * data.length);
            var item = data[rnum];
            putMyVar('rnum', rnum);
            let time = 5000;
            let col_type = 'pic_1_card';
            let color = "white";
            let desc = '';
            if (cfg != undefined) {
                time = cfg.time ? cfg.time : time;
                col_type = cfg.col_type ? cfg.col_type : col_type;
                desc = cfg.desc ? cfg.desc : desc;
            }

            arr.push({
                col_type: col_type,
                img: item.img,
                desc: desc,
                //title: item.title,
                url: item.url,
                extra: {
                    id: id + 'bar',
                    img: item.img,
                }
            }, {
                col_type: "avatar",
                title: item.title,
                img: "https://cdn-icons-png.flaticon.com/128/1384/1384060.png",
                url: Apollo.empty,
                extra: {
                    id: id + 'title',
                    title: item.title,
                    lineVisible: false
                }
            }, {
                col_type: "line_blank"
            })

            if (start == false || getMyVar('benstart', 'true') == 'false') {
                unRegisterTask(id)
                return
            }

            //log(data)

            let obj = {
                data: data,
            };

            registerTask(id, time, $.toString((obj, id) => {
                var data = obj.data;
                var rum = getMyVar('rnum');

                var i = Number(getMyVar('banneri', '0'));
                if (rum != '') {
                    i = Number(rum) + 1
                    clearMyVar('rnum')
                } else {
                    i = i + 1;
                }
                //log(i)
                //log(data.length)

                if (i > data.length - 1) {
                    i = 0
                }
                var item = data[i];
                //log(item)
                try {
                    updateItem(id + 'bar', {
                        //title: item.title,
                        img: item.img,
                        url: item.url,
                        extra: {
                            title: item.title,
                            img: item.img,
                            //name: item.title.replace(/<[^>]+>/g, ''),
                            //sname: item.extra.sname,
                            //stype: item.extra.stype,
                            //surl: item.url,
                            //img:item.img,
                            //pageTitle: item.title.replace(/<[^>]+>/g, ''),
                        }
                    })
                    updateItem(id + 'title', {
                        title: item.title,
                        extra: {
                            title: item.title,
                            lineVisible: false
                        }
                    })
                } catch (e) {
                    log(e.message)
                    unRegisterTask(id)
                }
                putMyVar('banneri', i);

            }, obj, id))
        }
        banner(MY_RULE.title, true, Apollo.d, lundata, {
            time: 3333,
            col_type: "card_pic_1",
            desc: '0'
        })
    },

    //一级视频列表
    videoType: (url, html) => {
        if (/Just\sa\smoment|请稍候.../.test(html)) {
            Apollo.d.push({
                title: '““””' + '获取cookie'.fontcolor('#FF00FF').big(),
                url: url,
                /*url: url + $('').rule(() => {
                    var d = [];
                    d.push({
                        col_type: 'x5_webview_single',
                        url: MY_URL,
                        desc: 'list&&screen',
                        extra: {
                            "User-Agent": "Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046285 Mobile Safari/537.36", //PC_UA,             
                            showProgress: false,
                            js: $.toString((u) => {
                                function check() {
                                    //let nodes = document.querySelectorAll('#tags');                                    
                                    //var ua = fba.getUa()
                                    //fba.log('co::::::' + ua);                                    
                                    var htmlContent = document.documentElement.innerHTML;

                                    if (/搜索结果/.test(htmlContent)) {
                                        var co = fba.getCookie(u);
                                        fba.log('co::::::' + co);
                                        fba.parseLazyRule($$$().lazyRule((co) => {
                                            writeFile('hiker://files/rules/Apollo/Cookie/avtoday_cookie.txt', co);
                                            toast('已获取cookie');
                                            back(true);
                                        }, co));
                                    } else {
                                        setTimeout(check, 500);
                                    }
                                }
                                check();
                            }, MY_URL)
                        }
                    });
                    return setResult(d);
                }),*/
                col_type: 'text_center_1'
            }, {
                title: '““””' + '点击刷新'.fontcolor('#FF0000').big(),
                url: $('').lazyRule(() => {
                    refreshPage()
                    return "hiker://empty"
                }),
                col_type: 'text_center_1',
                extra: {
                    lineVisible: false,
                }
            });
        }

        try {
            var currpagenum = pdfh(html, ".justify-between&&li:has(input)&&input&&value").match(/(\d+).\/.*/)[1]
        } catch {
            var currpagenum = "1"
        }
        try {
            lastpagenum = pdfh(html, ".justify-between&&li:has(input)&&input&&value").match(/.*\/.(\d+)/)[1]
        } catch {
            var lastpagenum = currpagenum
        }
        var list = pdfa(html, "body&&.thumbnail:not(:matches([AD]))");
        list.forEach(item => {
            var vurl = pd(item, 'a&&href');
            Apollo.d.push({
                title: pdfh(item, ".video-title&&Text"),
                desc: pdfh(item, ".video-duration&&Text"),
                img: pd(item, "img&&src") ? pd(item, "img&&src") : "https://thumbsnap.com/i/wxDcxfJH.png",
                url: vurl + Apollo.lazy,
                col_type: "movie_2",
                extra: {
                    pageTitle: pdfh(item, ".video-title&&Text"),
                    longClick: !url.includes("content") ? [{
                        title: '【跳页】【当前第>' + currpagenum + '<页】【尾页=>' + lastpagenum + '页】',
                        js: $.toString((lastpagenum, url) => {
                                return $('', '正确的页码：1=>' + lastpagenum + "页")
                                    .input((url, lastpagenum) => {
                                            if (input > 0 && input % 1 == 0 && input <= parseInt(lastpagenum)) {
                                                var jumpu = url.includes("page") ? url.replace(/page=\d+/, "page=" + input) : url + "?page=" + input
                                                putMyVar("url", jumpu);
                                                refreshPage();
                                                return 'toast://你已经穿越到了' + input + '页'
                                            } else {
                                                return "toast://请输入正确的页码"
                                            }
                                        },
                                        url, lastpagenum)
                            },
                            lastpagenum, url)
                    }] : ""
                }
            })
        })
    },

    //搜索
    searchParse: (url) => {
        url = url.replace("hiker://empty##", "")
        log(url)
        /*
        var html = fetch(url, {
            headers: {
                "cookie": fetchPC('hiker://files/rules/Apollo/Cookie/avtoday_cookie.txt') || '',
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; PFVM10 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046285 Mobile Safari/537.36",
            },
        });*/
        var html = fetchCodeByWebView(url)
        Apollo.videoType(url, html)
        setResult(Apollo.d)
    },

}

$.exports = Apollo