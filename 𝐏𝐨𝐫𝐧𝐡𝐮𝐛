const Apollo = {
    version: "202409231",
    empty: "hiker://empty",
    url: "https://cn.pornhub.com",
    d: [],
    data: {
        category: getMyVar('Apo.category', '0'),
        subCate: getMyVar('Apo.subCate', '0'),
    },
    getRangeColors: function() {
        return '#' + ('00000' + (Math.random() * 0x1000000 << 0)
                .toString(16))
            .substr(-6);
    }, //随机颜色
    baseParse: () => {
        let categoryList = [{
            "title": "首页",
            "path": "/",
            "type": "video",
            "sub": []
        }, {
            "title": "视频",
            "path": "",
            "type": "video",
            "sub": [{
                "title": "色情片",
                "path": "/video"
            }, {
                "title": "🇨🇳中文",
                "path": "/language/chinese"
            }, {
                "title": "🇮🇹意大利",
                "path": "/language/italian"
            }, {
                "title": "🇩🇪德国",
                "path": "/language/german"
            }, {
                "title": "🇨🇿捷克",
                "path": "/language/czech"
            }, {
                "title": "🇫🇷法国",
                "path": "/language/french"
            }, {
                "title": "🇷🇺俄罗斯",
                "path": "/language/russian"
            }, {
                "title": "🇯🇵日本",
                "path": "/language/japanese"
            }, {
                "title": "🇪🇸西班牙",
                "path": "/language/spanish"
            }, {
                "title": "🇳🇱荷兰",
                "path": "/language/dutch"
            }, {
                "title": "🇵🇱波兰",
                "path": "/language/polish"
            }, {
                "title": "🇵🇹葡萄牙",
                "path": "/language/portuguese"
            }]
        }, {
            "title": "分类",
            "path": "/categories",
            "type": "category",
            "sub": []
        }, {
            "title": "明星",
            "path": "",
            "type": "pornstar",
            "sub": [{
                "title": "模特",
                "path": "/pornstars"
            }, {
                "title": "已认证素人",
                "path": "/pornstars?performerType=amateur"
            }, {
                "title": "色情明星",
                "path": "/pornstars?performerType=pornstar"
            }, {
                "title": "男演员",
                "path": "/pornstars?gender=male"
            }]
        }, {
            "title": "频道",
            "path": "/channels",
            "type": "channel",
            "sub": []
        }, {
            "title": "片单",
            "path": "/playlists",
            "type": "playlist",
            "sub": []
        }]
        const currentCate = categoryList[Apollo.data.category]
        let url
        let type = currentCate.type
        let path = currentCate.path
        if (currentCate.sub.length > 0) {
            url = Apollo.url + getMyVar("url", currentCate.sub[Apollo.data.subCate].path)
            path = currentCate.sub[Apollo.data.subCate].path
        } else {
            url = Apollo.url + getMyVar("url", currentCate.path)
        }
        url = url.replace(/https?.*(https?.*)/, "$1")
        if (MY_PAGE === 1) {
            categoryList.forEach((cate, index) => {
                Apollo.d.push({
                    title: parseInt(Apollo.data.category) === index ? '““””' + cate.title.fontcolor("#FFFFFF").bold() : cate.title,
                    url: $(Apollo.empty + "#noLoading#")
                        .lazyRule((index) => {
                            putMyVar("Apo.category", index.toString())
                            putMyVar("Apo.subCate", '0')
                            clearMyVar("url")
                            clearMyVar("sort")
                            clearMyVar("yurl")
                            clearMyVar("ysort")
                            refreshPage(true)
                            return "hiker://empty"
                        }, index),
                    col_type: 'scroll_button',
                    extra: {
                        'backgroundColor': parseInt(Apollo.data.category) === index ? Apollo.getRangeColors() : ''
                    }
                })
                /*特例，分割第一行顶部
                if (index == 3) {
                    Apollo.d.push({
                        col_type: 'blank_block',
                    })
                } */ //分割行
            })
            if (currentCate.sub.length > 0) {
                Apollo.d.push({
                    col_type: 'blank_block',
                })
                currentCate.sub.forEach((cate, index) => {
                    Apollo.d.push({
                        title: parseInt(Apollo.data.subCate) === index ? '““””' + cate.title.fontcolor("#FFFFFF").bold() : cate.title,
                        url: $(Apollo.empty + "#noLoading#")
                            .lazyRule((index) => {
                                putMyVar("Apo.subCate", index.toString())
                                clearMyVar("url")
                                clearMyVar("sort")
                                clearMyVar("yurl")
                                clearMyVar("ysort")
                                refreshPage(true)
                                return "hiker://empty"
                            }, index),
                        col_type: 'scroll_button',
                        extra: {
                            'backgroundColor': parseInt(Apollo.data.subCate) === index ? Apollo.getRangeColors() : ''
                        }
                    })
                })
            }
        }

        //翻页
        let nextPage = getMyVar("nextPage", "");
        if (nextPage && MY_PAGE > 1) {
            if (url.includes("random")) {
                url = url
            } else {
                url = nextPage;
            };
        } else if (MY_PAGE > 1) {            
                url = "没有下一页哦😑"            
        }

        var html = fetch(url, {
            headers: {
                //"cookie": fetchPC('hiker://files/rules/Apollo/Cookie/youporn_cookie.txt') || '',
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; PFVM10 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046285 Mobile Safari/537.36",
            }
        })

        log(url)
        try {
            var next = Apollo.url + pdfh(html, "body&&.pagination&&.page_next&&a&&href")
            next = next.replace(/https?.*(https?.*)/, "$1")
            putMyVar("nextPage", next);
        } catch {
            clearMyVar("nextPage");
            //log("可能不存在下一页或者下一页定位有问题");
        }

        Apollo.videoSort(html)
        //搜索
        if (MY_PAGE == 1 && !/category/.test(url)) {
            Apollo.d.push({
                title: "🔍",
                url: $.toString((url) => {
                    if (input.trim() != "") {
                        putMyVar('keyword', input);
                        var searchUrl = getHome(url) + "/video/search?search=" + input
                        putMyVar("url", searchUrl);
                        refreshPage();
                        return "hiker://empty"
                    } else {
                        return "confirm://搜索内容为空.js:'hiker://empty'"
                    }
                }, url),
                desc: '搜索番号...',
                col_type: "input",
                extra: {
                    defaultValue: getMyVar('keyword', '') || "",
                }
            });
        }
        if (MY_PAGE == 1 && url.includes("search")) {
            Apollo.d.push({
                title: '““””' + "搜寻结果".fontcolor("#FF00FF"),
                url: "hiker://empty",
                col_type: "text_1",
                extra: {
                    lineVisible: false
                }
            })
        }
        switch (type) {
            case 'video':
                Apollo.videoType(url, html)
                break
            case 'category':
                if (url.includes("search")) {
                    Apollo.videoType(url, html)
                } else {
                    if (MY_PAGE == 1) {
                        Apollo.categoryType(html)
                    }
                }
                break
            case 'pornstar':
                if (url.includes("search")) {
                    Apollo.videoType(url, html)
                } else {
                    Apollo.pornstarType(html)
                }
                break
            case 'channel':
                if (url.includes("search")) {
                    Apollo.videoType(url, html)
                } else {
                    Apollo.channelType(html)
                }
                break
            case 'playlist':
                if (url.includes("search")) {
                    Apollo.videoType(url, html)
                } else {
                    Apollo.playlistType(html)
                }
                break
            default:
                Apollo.videoType(url, html)
        }
        setResult(Apollo.d)
    },

    //一级sort
    videoSort: (html) => {
        if (MY_PAGE == 1) {
            Apollo.d.push({
                col_type: "blank_block",
            });
            try {
                var sort = pdfa(html, 'body&&.subFilterList&&a')
                sort.forEach((item, index) => {
                    var title = pdfh(item, 'Text');
                    var urll = Apollo.url + pdfh(item, 'a&&href');
                    urll = urll.replace(/https?.*(https?.*)/, "$1");
                    Apollo.d.push({
                        title: title,
                        url: urll + $('#noLoading#')
                            .lazyRule((index) => {
                                if (MY_URL.includes("hiker://empty")) {
                                    putMyVar('sort', index);
                                    putMyVar("url", input);
                                } else {
                                    putMyVar('ysort', index);
                                    putMyVar("yurl", input);
                                }
                                refreshPage();
                                return 'hiker://empty'
                            }, index),
                        col_type: 'scroll_button',
                        extra: {
                            'backgroundColor': (MY_URL.includes("hiker://empty") ? getMyVar('sort', '0') == index : getMyVar('ysort', '0') == index) ? Apollo.getRangeColors() : ''
                        }
                    })
                })
            } catch {}
        }
    },

    //动态分类
    DynamicSort: (url, html) => {
        const 分类颜色 = Apollo.getRangeColors()
        const 大类定位 = 'body&&.origin-top-right.w-56.z-10'
        const 拼接分类 = ''
        const 小类定位 = 'body&&a'
        const 分类标题 = 'Text'
        const 分类链接 = 'a&&href'
        Apollo.d.push({
            col_type: "blank_block"
        });
        try {
            if (typeof(拼接分类) != 'undefined' && 拼接分类 != '') {
                var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))
            } else {
                var categories = pdfa(html, 大类定位)
            }
        } catch {
            var categories = pdfa(html, 大类定位)
        }
        let init_cate = []
        for (let i = 0; i < 20; i++) {
            init_cate.push("0")
        }
        if (url.includes("search")) {
            var cate_temp_json = getMyVar("ysort", JSON.stringify(init_cate))
        } else {
            var cate_temp_json = getMyVar("sort", JSON.stringify(init_cate))
        }
        var cate_temp = JSON.parse(cate_temp_json)

        if (MY_PAGE == 1) {
            categories.forEach((category, index) => {
                let sub_categories = pdfa(category, 小类定位);
                sub_categories.forEach((item, key) => {
                    let title = pdfh(item, 分类标题)
                    if (typeof(排除) != 'undefined' && 排除 != '') {
                        title = title.replace(new RegExp(排除, "g"), "")
                    };
                    Apollo.d.push({
                        title: key.toString() === cate_temp[index] ? '““””' + title.fontcolor(分类颜色) : title,
                        url: $(pdfh(item, 分类链接) + '#noLoading#').lazyRule((params) => {
                            params.cate_temp[params.index] = params.key.toString()
                            if (MY_URL.includes("hiker://empty")) {
                                putMyVar('sort', JSON.stringify(params.cate_temp));
                                putMyVar("url", input);
                            } else {
                                putMyVar('ysort', JSON.stringify(params.cate_temp));
                                putMyVar("yurl", input);
                            }
                            refreshPage(true)
                            return "hiker://empty"
                        }, {
                            cate_temp: cate_temp,
                            index: index,
                            key: key,
                            page: MY_PAGE,
                        }),
                        col_type: 'scroll_button',
                        extra: {
                            'backgroundColor': key.toString() === cate_temp[index] ? Apollo.getRangeColors() : ''
                        }
                    })
                })
                Apollo.d.push({
                    col_type: "blank_block"
                });
            })
        }
    },

    //一级视频列表
    videoType: (url, html) => {
        try {
            var currpagenum = pdfh(html, "body&&.pagination&&.page_current&&Text").match(/\d+/)[0]
        } catch {
            var currpagenum = "1"
        }
        try {
            lastpagenum = "99999"
        } catch {
            var lastpagenum = currpagenum
        }
        var list = pdfa(html, "body&&li[data-video-id]");
        list.forEach(item => {
            var vurl = Apollo.url + pdfh(item, 'a&&href');
            vurl = vurl.replace(/https?.*(https?.*)/, "$1")
            var title = pdfh(item, ".title&&Text");
            var img = pdfh(item, "img&&src");
            Apollo.d.push({
                title: title,
                desc: pdfh(item, ".views&&Text") + "⏰" + pdfh(item, ".time&&Text"),
                img: img ? img : "https://thumbsnap.com/i/3uqjc1qq.gif",
                url: vurl + $('#noHistory#')
                    .rule(() => {
                        const Apollo = $.require('hiker://page/Apollo')
                        Apollo.videoParse(MY_URL)
                        setResult(Apollo.d)
                    }),
                col_type: "movie_2",
                extra: {
                    pageTitle: title,
                    longClick: !url.includes("viewkey") ? [{
                        title: '【跳页】【当前第>' + currpagenum + '<页】', //【尾页=>' + lastpagenum + '页】
                        js: $.toString((lastpagenum, url) => {
                                return $('', '正确的页码：1=>' + lastpagenum + "页")
                                    .input((url, lastpagenum) => {
                                            if (input > 0 && input % 1 == 0) {
                                                var jumpu = url.replace(/(\?page=\d+|\&page=\d+|$)/, (match) => {
                                                    if (match.startsWith('?page=') || match.startsWith('&page=')) {
                                                        return match.charAt(0) + 'page=' + input;
                                                    } else {
                                                        return (url.includes('?') ? '&page=' : '?page=') + input;
                                                    }
                                                });
                                                putMyVar("url", jumpu);
                                                putMyVar("yurl", jumpu);
                                                refreshPage();
                                                return 'toast://你已经穿越到了' + input + '页'
                                            } else {
                                                return "toast://请输入正确的页码"
                                            }
                                        },
                                        url, lastpagenum)
                            },
                            lastpagenum, url)
                    }] : ""
                }
            })
        })
    },
    //分类
    categoryType: (html) => {
        var tabs = pdfa(html, 'body&&.categoriesTitle'); //大类
        var conts = pdfa(html, 'body&&.categoriesWrapper'); //小类

        for (var i = 0; i < conts.length; i++) {
            var list = pdfa(conts[i], 'body&&.catPic');
            Apollo.d.push({
                title: pdfh(tabs[i], 'Text').bold(),
                url: 'toast://点了也没用',
                col_type: "rich_text"
            });
            /*
                d.push({
                    col_type: "line"
                });
            */
            list.forEach(item => {
                var vurl = Apollo.url + pdfh(item, 'a&&href');
                vurl = vurl.replace(/https?.*(https?.*)/, "$1")
                Apollo.d.push({
                    title: pdfh(item, "strong&&Text"),
                    desc: pdfh(item, ".videoCount&&Text"),
                    img: pd(item, "img&&src") ? pd(item, "img&&src") : "https://thumbsnap.com/i/3uqjc1qq.gif",
                    url: vurl + $('##fypage')
                        .rule(() => {
                            const Apollo = $.require('hiker://page/Apollo')
                            Apollo.yijiParse(MY_URL.split("##")[0])
                            setResult(Apollo.d)
                        }),
                    col_type: "movie_2",
                })
            })
        }
    },

    //明星
    pornstarType: (html) => {
        var list = pdfa(html, "body&&.pornstarList:not(.topPornstars)&&li");
        list.forEach(item => {
            var vurl = Apollo.url + pdfh(item, 'a&&href');
            vurl = vurl.replace(/https?.*(https?.*)/, "$1")
            Apollo.d.push({
                title: pdfh(item, ".performerCardName&&Text"),
                desc: "🖥" + pdfh(item, ".videos&&Text"),
                img: pdfh(item, "img&&src") ? pdfh(item, "img&&src") : "https://thumbsnap.com/i/3uqjc1qq.gif",
                url: vurl + $('/videos##fypage')
                    .rule(() => {
                        const Apollo = $.require('hiker://page/Apollo')
                        Apollo.yijiParse(MY_URL.split("##")[0])
                        setResult(Apollo.d)
                    }),
                col_type: "movie_3",
            })
        })
    },
    //频道
    channelType: (html) => {
        if (MY_PAGE == 1) {
            Apollo.d.push({
                col_type: "blank_block",
            });
            try {
                var sort = pdfa(html, '.display-none&&li')
                sort.forEach((item, index) => {
                    var title = pdfh(item, 'Text');
                    var urll = Apollo.url + pdfh(item, 'li&&data-value');
                    urll = urll.replace(/https?.*(https?.*)/, "$1");
                    Apollo.d.push({
                        title: title,
                        url: urll + $('#noLoading#')
                            .lazyRule((index) => {
                                putMyVar('csort', index);
                                putMyVar("url", input);
                                refreshPage();
                                return 'hiker://empty'
                            }, index),
                        col_type: 'scroll_button',
                        extra: {
                            'backgroundColor': getMyVar('csort', '1') == index ? Apollo.getRangeColors() : ''
                        }
                    })
                })
            } catch {}
        }
        var list = pdfa(html, "body&&.channelsList&&.positionRelative");
        list.forEach(item => {
            var vurl = Apollo.url + pdfh(item, 'a&&href');
            vurl = vurl.replace(/https?.*(https?.*)/, "$1")
            Apollo.d.push({
                title: pdfh(item, ".channelNameWrapper&&Text").slice(0,16) + "\n🖥" + pdfh(item, ".info:matches(视频)&&Text"),
                img: pdfh(item, "img&&src") ? pdfh(item, "img&&src") : "https://thumbsnap.com/i/3uqjc1qq.gif",
                url: vurl + $('/videos##fypage')
                    .rule(() => {
                        const Apollo = $.require('hiker://page/Apollo')
                        Apollo.yijiParse(MY_URL.split("##")[0])
                        setResult(Apollo.d)
                    }),
                col_type: "card_pic_3",
            })
        })
    },
    //片单
    playlistType: (html) => {
        var list = pdfa(html, "body&&.playList&&.playlistWrapper");
        list.forEach(item => {
            var vurl = Apollo.url + pdfh(item, '.title&&a&&href');
            vurl = vurl.replace(/https?.*(https?.*)/, "$1")
            Apollo.d.push({
                title: pdfh(item, ".title&&Text"),
                desc: "🖥" + pdfh(item, ".thumbCorners&&Text"),
                img: pdfh(item, "img&&src") ? pdfh(item, "img&&src") : "https://thumbsnap.com/i/3uqjc1qq.gif",
                url: vurl + $('##fypage')
                    .rule(() => {
                        const Apollo = $.require('hiker://page/Apollo')
                        Apollo.yijiParse(MY_URL.split("##")[0])
                        setResult(Apollo.d)
                    }),
                col_type: "movie_2",
            })
        })
    },

    //一级.简
    yijiParse: (url) => {
        addListener("onClose", $.toString(() => {
            clearMyVar("yurl");
            clearMyVar("ysort");
        }));
        url = getMyVar("yurl", url)
        //翻页
        let nextPage = getMyVar("YnextPage", "");
        if (nextPage && MY_PAGE > 1) {
            if (url.includes("random")) {
                url = url
            } else {
                url = nextPage;
            };
        } else if (MY_PAGE > 1) {         
                url = "没有下一页哦😑"           
        }

        var html = fetch(url, {
            headers: {
                //"cookie": fetchPC('hiker://files/rules/Apollo/Cookie/youporn_cookie.txt') || '',
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; PFVM10 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046285 Mobile Safari/537.36",
            }
        })

        log(url)
        try {
            var next = Apollo.url + pdfh(html, "body&&.pagination&&.page_next&&a&&href")
            next = next.replace(/https?.*(https?.*)/, "$1")
            putMyVar("YnextPage", next);
        } catch {
            clearMyVar("YnextPage");
            //log("可能不存在下一页或者下一页定位有问题");
        }
        if (MY_PAGE == 1) {
            try {
                if (pdfa(html, "body&&#channelsProfile&&.cover").length > 0) {
                    var cover = pdfh(html, "body&&#channelsProfile&&.cover&&img&&src");
                    var title = "““””" + pdfh(html, "body&&#channelsProfile&&h1&&Text").fontcolor("#666666").bold().big() + "\n" + pdfh(html, "body&&#channelsProfile&&.subscribeButton&&Text").fontcolor("#86bac8").bold().big();
                    var desc = "““””" + pdfh(html, "body&&#channelsProfile&&.channelStats&&li&&Text").fontcolor("#666666").bold() + "\t\t" + pdfh(html, "body&&#channelsProfile&&.channelStats&&li:nth-child(2)&&Text").fontcolor("#666666").bold() + "\n\n" + pdfh(html, "body&&#channelsProfile&&.channelStats&&li:nth-child(3)&&Text").fontcolor("#666666").bold() + "\t\t" + pdfh(html, "body&&#channelsProfile&&.channelStats&&li:nth-child(4)&&Text").fontcolor("#666666").bold();
                    var img = pdfh(html, "body&&#channelsProfile&&.avatar&&img&&src");
                } else {
                    var cover = pdfh(html, "#communityProfileWrapper&&.imageWrapper&&img&&src");
                    var title = "““””" + pdfh(html, "#communityProfileWrapper&&h1&&Text").fontcolor("#666666").bold().big() + "\n" + pdfh(html, "#communityProfileWrapper&&.subscribeButton&&Text").fontcolor("#86bac8").bold().big();
                    var desc = "““””" + pdfh(html, "#communityProfileWrapper&&.rankInfo&&Text").fontcolor("#666666").bold() + "\t\t" + pdfh(html, "#communityProfileWrapper&&.rankInfo:nth-child(3)&&Text").fontcolor("#666666").bold() + "\n\n" + pdfh(html, "#communityProfileWrapper&&.rankInfo:nth-child(2)&&Text").fontcolor("#666666").bold();
                    var img = pdfh(html, "#communityProfileWrapper&&#getAvatar&&img&&src");
                }
                Apollo.d.push({
                    img: cover,
                    url: "hiker://empty",
                    col_type: "pic_1_full"
                }, {
                    title: title,
                    desc: desc,
                    img: img,
                    url: "hiker://empty",
                    col_type: "movie_1_vertical_pic"
                })
            } catch {}
        }
        Apollo.videoSort(html)
        Apollo.videoType(url, html)
        setResult(Apollo.d)
    },
    //二级
    videoParse: (url) => {
        log(url)
        var html = fetch(url, {
            headers: {
                "cookie": "bs=raeyscabe8a7ew66zdgehncv1t8wi3ot;bsdd=raeyscabe8a7ew66zdgehncv1t8wi3ot;ss=603859121181211630;sessid=474453869377637466;fg_afaf12e314c5419a855ddc0bf120670f=68723.100000;fg_7d466c3b3b825a5e5f974868b9d87c01=52394.100000;fg_7d31324eedb583147b6dcbea0051c868=91688.100000;__s=66E7568F-42FE722901BB268F76-19921321;__l=66E7568F-42FE722901BB268F76-19921321;accessAgeDisclaimerPH=1;fg_439f2555043a44b8bd91161b5deddd29=28642.100000;entryOrigin=VidPg-premVid;lvv=575131738507129946;vlc=724153866294496651;tj_UUID=ChD_p4-CSAZM7p0ty0wqjKOPEgwIo62dtwYQ397jtAIYAQ==;tj_UUID_v2=ChD_p4-CSAZM7p0ty0wqjKOPEgwIo62dtwYQ397jtAIYAQ==;d_fs=1;d_uidb=15f0129d-d0b7-a0e2-0a3b-b1a0670200ba;d_uid=15f0129d-d0b7-a0e2-0a3b-b1a0670200ba;d_uidb=15f0129d-d0b7-a0e2-0a3b-b1a0670200ba;fg_638b37a99220fbf3b1750e2da022d459=74834.100000;ua=725935d1127ba250122eba7fe6c31da4",
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; PFVM10 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046285 Mobile Safari/537.36",
            },
        });
        //标题
        var title = pdfh(html, "body&&h1&&Text");
        Apollo.d.push({
            title: '““””' + title.fontcolor(""),
            url: url,
            col_type: 'text_1',
            extra: {
                lineVisible: false,
                id: 'transdesc',
                longClick: [{
                    title: '网页',
                    js: $.toString(() => {
                        return "web://" + MY_URL
                    })
                }, {
                    title: '复制',
                    js: $.toString((title) => {
                        return "copy://" + title;
                    }, title)
                }]
            }
        })

        // 这个变量定义在下面执行 script 的上方，没有被读取执行，需要手动声明避免报错
        let playerObjList = {}
        // 获取视频播放地址的变量并执行
        var js = parseDomForHtml(html, "[id=mobileContainer]&&script&&Html").replace(/var flashvars_.*?=/, 'var flashvars =');
        eval(js);
        var list = flashvars.mediaDefinitions
        JSON.stringify(list.sort(function(a, b) {
            return b.quality - a.quality
        }));
        var urls = []
        var names = []
        list.forEach(item => {
            if (typeof item.quality === 'string') {
                urls.push(
                    item.videoUrl,
                );
                names.push(
                    item.quality,
                );
            }
        })
        var playlist = JSON.stringify({
            urls,
            names
        })
        var img = parseDom(html, '#videoPlayerPlaceholder&&img&&src');
        Apollo.d.push({
            img: img,
            url: playlist,
            col_type: "pic_1_full",
        })

        var 详细信息 = pdfh(html, "body&&.ratingDetails&&Text").trim();
        if (详细信息 != "") {
            Apollo.d.push({
                title: 详细信息.fontcolor("#666666").bold(),
                col_type: "rich_text"
            })
            Apollo.d.push({
                col_type: "line",
            })
        }
        /*
        var 番号 = pdfh(html, "body&&#description&&.text-gray-700:has(span):matches(番号:)&&Text").trim()
        if (番号 != "") {
            Apollo.d.push({
                title: "““””" + 番号.fontcolor("#666666").bold(),
                url: "hiker://empty",
                col_type: "text_1"
            })
        }
*/
        try {
            var userContainer = pdfh(html, "body&&.userContainer&&a&&Text");
            Apollo.d.push({
                title: userContainer.fontcolor("").bold().big(),
                img: pdfh(html, "body&&.userContainer&&img&&src"),
                desc: pdfh(html, "body&&.userContainer&&.userInfo&&Text"),
                url: Apollo.url + pdfh(html, "body&&.userContainer&&a&&href") + $('/videos##fypage')
                    .rule(() => {
                        const Apollo = $.require('hiker://page/Apollo')
                        Apollo.yijiParse(MY_URL.split("##")[0])
                        setResult(Apollo.d)
                    }),
                col_type: "avatar",
                extra: {
                    pageTitle: userContainer
                }
            })
            Apollo.d.push({
                col_type: "line",
            })
        } catch {}

        //标签
        try {
            var list = pdfa(html, "body&&.tags.floatLeft&&a");
            list.forEach(item => {
                var vurl = Apollo.url + pdfh(item, 'a&&href');
                vurl = vurl.replace(/https?.*(https?.*)/, "$1")
                var title = pdfh(item, "a&&Text");
                Apollo.d.push({
                    title: '““””' + title.fontcolor("#FFFFFF"),
                    url: vurl + $('##fypage')
                        .rule(() => {
                            const Apollo = $.require('hiker://page/Apollo')
                            Apollo.yijiParse(MY_URL.split("##")[0])
                            setResult(Apollo.d)
                        }),
                    col_type: "flex_button",
                    extra: {
                        pageTitle: title,
                        'backgroundColor': Apollo.getRangeColors()
                    }
                })
            })
        } catch {}
        //相关
        Apollo.d.push({
            title: "相关视频".fontcolor("#FF00FF").bold(),
            col_type: "rich_text"
        })
        Apollo.videoType(url, html)
        setResult(Apollo.d)
    },
    //搜索
    searchParse: (url) => {
        keyword = url.split("##")[1]
        url = Apollo.url + "/video/search?search=" + keyword + "&page=" + MY_PAGE
        log(url)
        var html = fetch(url, {
            headers: {
                //"cookie": fetchPC('hiker://files/rules/Apollo/Cookie/youporn_cookie.txt') || '',
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; PFVM10 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046285 Mobile Safari/537.36",
            },
        });
        Apollo.videoType(url, html)
        setResult(Apollo.d)
    },

}

$.exports = Apollo