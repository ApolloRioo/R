const Apollo = {
    version: 20241012,
    empty: "hiker://empty",
    url: getItem('link', "https://18av.mm-cg.com"),
    d: [],
    data: {
        category: getMyVar('Apo.category', '0'),
        subCate: getMyVar('Apo.subCate', '0'),
    },
    getRangeColors: function() {
        return '#' + ('00000' + (Math.random() * 0x1000000 << 0)
                .toString(16))
            .substr(-6);
    }, //随机颜色
    baseParse: () => {
        const page = parseInt(MY_URL.split('##')[2])
        let categoryList = [{
            "title": "首页",
            "path": "/zh/",
            "type": "video",
            "sub": ""
        }, {
            "title": "中文字幕AV",
            "path": "/zh/chinese_random/all/index.html",
            "type": "video",
            "sub": [{
                "title": "中文字幕AV",
                "path": "/zh/chinese_list/all/1.html"
            }, {
                "title": "隨機近作",
                "path": "/zh/chinese_random/all/index.html"
            }, {
                "title": "隨機All",
                "path": "/zh/chinese_randomall/all/index.html"
            }, {
                "title": "類別清單",
                "path": "/zh/chinese_category/1/企畫/1.html"
            }]
        }, {
            "title": "無碼AV",
            "path": "/zh/uncensored_random/all/index.html",
            "type": "video",
            "sub": [{
                "title": "無碼AV",
                "path": "/zh/uncensored_list/all/1.html"
            }, {
                "title": "無碼隨機",
                "path": "/zh/uncensored_random/all/index.html"
            }, {
                "title": "一本道(1pondo)",
                "path": "/zh/uncensored_makersr/32/一本道(1pondo)/1.html"
            }, {
                "title": "カリビアンコム(Caribbeancom)",
                "path": "/zh/uncensored_makersr/30/カリビアンコム(Caribbeancom)/1.html"
            }, {
                "title": "カリビアンコム PPV(Caribbeancompr)",
                "path": "/zh/uncensored_makersr/40/カリビアンコムPPV(Caribbeancompr)/1.html"
            }, {
                "title": "天然むすめ(10musume)",
                "path": "/zh/uncensored_makersr/31/天然むすめ(10musume)/1.html"
            }, {
                "title": "HEYZO",
                "path": "/zh/uncensored_makersr/17/HEYZO/1.html"
            }, {
                "title": "東京熱(Tokyo Hot)",
                "path": "/zh/uncensored_makersr/29/東京熱(Tokyo Hot)/1.html"
            }, {
                "title": "ガチん娘！(Gachinco)",
                "path": "/zh/uncensored_makersr/35/ガチん娘！(Gachinco)/1.html"
            }, {
                "title": "パコパコママ(pacopacomama)",
                "path": "/zh/uncensored_makersr/36/パコパコママ(pacopacomama)/1.html"
            }, {
                "title": "エッチな4610",
                "path": "/zh/uncensored_makersr/34/エッチな4610/1.html"
            }, {
                "title": "人妻斬り0930",
                "path": "/zh/uncensored_makersr/38/人妻斬り0930/1.html"
            }, {
                "title": "エッチな0930",
                "path": "/zh/uncensored_makersr/39/エッチな0930/1.html"
            }, {
                "title": "トリプルエックス (XXX-AV)",
                "path": "/zh/uncensored_makersr/126/トリプルエックス (XXX-AV)/1.html"
            }]
        }, {
            "title": "H動畫",
            "path": "/zh/animation_random/all/index.html",
            "type": "video",
            "sub": [{
                "title": "H動畫",
                "path": "/zh/animation_list/all/1.html"
            }, {
                "title": "H動畫隨機",
                "path": "/zh/animation_random/all/index.html"
            }, {
                "title": "H有碼動畫随机",
                "path": "/zh/CensoredAnimation_random/all/index.html"
            }, {
                "title": "H有碼動畫",
                "path": "/zh/CensoredAnimation_list/all/1.html"
            }, {
                "title": "H無碼動畫随机",
                "path": "/zh/UncensoredAnimation_random/all/index.html"
            }, {
                "title": "H無碼動畫",
                "path": "/zh/UncensoredAnimation_list/all/1.html"
            }, {
                "title": "H_3D動畫随机",
                "path": "/zh/tdAnimation_random/all/index.html"
            }, {
                "title": "H_3D動畫",
                "path": "/zh/tdAnimation_list/all/1.html"
            }]
        }, {
            "title": "國產自拍",
            "path": "/zh/dt_random/all/index.html",
            "type": "video",
            "sub": [{
                "title": "國產自拍",
                "path": "/zh/dt_list/all/1.html"
            }, {
                "title": "國產自拍随机",
                "path": "/zh/dt_random/all/index.html"
            }]
        }, {
            "title": "寫真圖片",
            "path": "/zh/cg_random/all/index.html",
            "type": "video",
            "sub": [{
                "title": "寫真圖片",
                "path": "/zh/cg_list/all/1.html"
            }, {
                "title": "寫真隨機",
                "path": "/zh/cg_random/all/index.html"
            }, {
                "title": "國產寫真",
                "path": "/zh/cwp_random/all/index.html"
            }, {
                "title": "國產隨機",
                "path": "/zh/cwp_list/all/1.html"
            }, {
                "title": "Bejean On Line",
                "path": "/zh/cg_search/all/Bejean On Line/1.html"
            }, {
                "title": "Bomb.tv",
                "path": "/zh/cg_search/all/Bomb.tv/1.html"
            }, {
                "title": "DGC",
                "path": "/zh/cg_search/all/DGC/1.html"
            }, {
                "title": "Graphis Gals",
                "path": "/zh/cg_search/all/Graphis Gals/1.html"
            }, {
                "title": "Graphis Hatsunugi",
                "path": "/zh/cg_search/all/Graphis Hatsunugi/1.html"
            }, {
                "title": "image.tv",
                "path": "/zh/cg_search/all/image.tv/1.html"
            }, {
                "title": "Sabra.net",
                "path": "/zh/cg_search/all/Sabra.net/1.html"
            }, {
                "title": "S-Cute",
                "path": "/zh/cg_search/all/S-Cute/1.html"
            }, {
                "title": "X-City",
                "path": "/zh/cg_search/all/X-City/1.html"
            }, {
                "title": "YS Web",
                "path": "/zh/cg_search/all/YS Web/1.html"
            }, {
                "title": "3AGirl AAA女郎",
                "path": "/zh/cwp_search/all/3AGirl AAA女郎/1.html"
            }, {
                "title": "ROSI寫真",
                "path": "/zh/cwp_search/all/ROSI寫真/1.html"
            }, {
                "title": "RU1MM 如壹寫真",
                "path": "/zh/cwp_search/all/RU1MM 如壹寫真/1.html"
            }, {
                "title": "DISI第四印象",
                "path": "/zh/cwp_search/all/DISI第四印象/1.html"
            }]
        }, {
            "title": "小說",
            "path": "/zh/novel_random/all/index.html",
            "type": "video",
            "sub": [{
                "title": "小說",
                "path": "/zh/novel_list/all/1.html"
            }, {
                "title": "小說隨機",
                "path": "/zh/novel_random/all/index.html"
            }, {
                "title": "學生校園",
                "path": "/zh/novel_search/all/學生校園/1.html"
            }, {
                "title": "職場激情",
                "path": "/zh/novel_search/all/職場激情/1.html"
            }, {
                "title": "經驗故事",
                "path": "/zh/novel_search/all/經驗故事/1.html"
            }, {
                "title": "暴力虐待",
                "path": "/zh/novel_search/all/暴力虐待/1.html"
            }, {
                "title": "不倫戀情",
                "path": "/zh/novel_search/all/不倫戀情/1.html"
            }, {
                "title": "群體換伴",
                "path": "/zh/novel_search/all/群體換伴/1.html"
            }, {
                "title": "人妻熟女",
                "path": "/zh/novel_search/all/人妻熟女/1.html"
            }, {
                "title": "科學幻想",
                "path": "/zh/novel_search/all/科學幻想/1.html"
            }, {
                "title": "其他故事",
                "path": "/zh/novel_search/all/其他故事/1.html"
            }, {
                "title": "玄幻仙俠",
                "path": "/zh/novel_search/all/玄幻仙俠/1.html"
            }, {
                "title": "動漫修改",
                "path": "/zh/novel_search/all/動漫修改/1.html"
            }, {
                "title": "長篇連載",
                "path": "/zh/novel_search/all/長篇連載/1.html"
            }]
        }]
        const currentCate = categoryList[Apollo.data.category]
        let url
        let type = currentCate.type
        let path = currentCate.path
        if (currentCate.sub.length > 0) {
            url = Apollo.url + getMyVar("url", currentCate.sub[Apollo.data.subCate].path)
            path = currentCate.sub[Apollo.data.subCate].path
        } else {
            url = Apollo.url + getMyVar("url", currentCate.path)
        }
        url = url.replace(/https?.*(https?.*)/, "$1")
        if (page === 1) {
            categoryList.forEach((cate, index) => {
                Apollo.d.push({
                    title: parseInt(Apollo.data.category) === index ? '““””' + cate.title.fontcolor(Apollo.getRangeColors()) : cate.title,
                    url: $(Apollo.empty + "#noLoading#")
                        .lazyRule((index) => {
                            putMyVar("Apo.category", index.toString())
                            putMyVar("Apo.subCate", '0')
                            clearMyVar("url")
                            clearMyVar("sort")
                            clearMyVar("yurl");
                            refreshPage(true)
                            return "hiker://empty"
                        }, index),
                    col_type: 'scroll_button',
                })
            })
            if (currentCate.sub.length > 0) {
                Apollo.d.push({
                    col_type: 'blank_block',
                })
                currentCate.sub.forEach((cate, index) => {
                    Apollo.d.push({
                        title: parseInt(Apollo.data.subCate) === index ? '““””' + cate.title.fontcolor(Apollo.getRangeColors()) : cate.title,
                        url: $(Apollo.empty + "#noLoading#")
                            .lazyRule((index) => {
                                putMyVar("Apo.subCate", index.toString())
                                clearMyVar("url")
                                clearMyVar("sort")
                                clearMyVar("yurl");
                                refreshPage(true)
                                return "hiker://empty"
                            }, index),
                        col_type: 'scroll_button',
                    })
                })
            }
        }
        if (MY_PAGE == 1 && !/category/.test(url)) {
            Apollo.d.push({
                title: "🔍",
                url: $.toString((url) => {
                    putMyVar('keyword', input);
                    var searchUrl = getHome(url) + "/zh/fc_search/all/" + input + "/1.html"
                    putMyVar("url", searchUrl);
                    refreshPage();
                    return "hiker://empty"
                }, url),
                desc: '搜索...',
                col_type: "input",
                extra: {
                    defaultValue: getMyVar('keyword', '') || "",
                }
            });
        }
        //翻页
        /*
        if (page !== 1) {
            url = url.includes("?") ? url + "&page=" + page : url + "?&page=" + page
        }
        const html = fetch(url, {
            headers: {
                "Cookie": fetchPC('hiker://files/rules/Apollo/Cookie/javlibrary_cookie.txt') || '',
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046279 Mobile Safari/537.36",
            }
        })*/
        let nextPage = getMyVar("nextPage", "");
        if (nextPage && MY_PAGE > 1) {
            if (url.includes("random")) {
                url = url
            } else {
                url = nextPage;
            };
        } else if (MY_PAGE > 1) {
            if (url.endsWith("/zh/")) {
                url = url
            } else {
                url = "没有下一页哦😑"
            };
        }

        var html = fetch(url, {
            headers: {
                "user-agent": "Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046285 Mobile Safari/537.36"
            }
        })

        Apollo.HostParse(url, html)
        log(url)
        try {
            var next = pdfh(html, "body&&.pagination-row&&.previous-next:matches(>)&&a&&href")
            putMyVar("nextPage", next);
        } catch {
            clearMyVar("nextPage");
            //log("可能不存在下一页或者下一页定位有问题");
        }

        if (url.includes("searchbyid")) {
            Apollo.d.push({
                title: '““””' + "识别码搜寻结果".fontcolor("#67E0FA"),
                url: "hiker://empty",
                col_type: "text_1",
                extra: {
                    lineVisible: false
                }
            })
        }

        switch (type) {
            case 'video':
                if (url.includes("category")) {
                    Apollo.seriesType(url, html)
                } else {
                    Apollo.videoType(url, html)
                }
                break
            case 'actress':
                //Apollo.avatarType(html)
                break
            case 'series':
                Apollo.seriesType(html)
                break
            default:
                Apollo.videoType(url, html)
        }
        setResult(Apollo.d)
    },

    //一级视频列表
    videoType: (url, html) => {
        if (url.includes("cg_") || url.includes("cwp_")) {
            col = "movie_3";
            lazy = $('#noHistory#')
                .lazyRule(() => {
                    var html = fetch(input)
                    var script = pdfh(html, "body&&script[language]&&Html")
                    eval(script)
                    var pics = Large_cgurl.join("&&")
                    return "pics://" + pics
                })
        } else if (url.includes("novel_")) {
            col = "avatar";
            lazy = $('#noHistory#')
                .rule(() => {
                    var d = []
                    var html = fetch(MY_URL)
                    var title = pdfh(html, '.archive-title&&Text');
                    if (title !== null) {
                        d.push({
                            title: '““””<middle><font color=#FFA500>' + title + '</font></middle>',
                            url: MY_URL,

                            col_type: 'text_center_1',
                            extra: {
                                lineVisible: false
                            }
                        })
                    }
                    var content = pdfh(html, 'body&&#novel_content_txtsize&&Html')
                    d.push({
                        title: "<middle><font color=grey>" + content + "</font></middle>",
                        col_type: 'rich_text',
                        extra: {
                            lineVisible: false
                        }
                    })
                    setResult(d)
                })
        } else {
            col = "movie_2";
            lazy = $('#noHistory#')
                .rule(() => {
                    const Apollo = $.require('hiker://page/Apollo')
                    Apollo.videoParse(MY_URL)
                    setResult(Apollo.d)
                })
        }
        try {
            var currpagenum = pdfh(html, "body&&.pagination-row&&.current&&Text")
        } catch {
            var currpagenum = "1"
        }
        try {
            if (currpagenum.includes("隨機")) {
                var lastpagenum = 1
            } else {
                var lastpagenum = pdfh(html, "body&&.pagination-row&&.previous-next:matches(>)+li&&a&&Text")
                if (lastpagenum == "") {
                    lastpagenum = pdfh(html, "body&&.pagination-row&&li:nth-last-child(2)&&Text")
                }
                if (lastpagenum == ">") {
                    lastpagenum = pdfh(html, "body&&.pagination-row&&li:nth-last-child(3)&&Text")
                }
            }
        } catch {
            var lastpagenum = currpagenum
        }
        var list = pdfa(html, ".posts&&.post");
        list.forEach(item => {
            var vurl = pdfh(item, 'a&&href');
            Apollo.d.push({
                title: pdfh(item, "h3&&a&&Text"),
                desc: pdfh(item, ".meta&&Text"),
                img: pdfh(item, "img&&src") ? pdfh(item, "img&&src").replace("/s/", "/b/") : "https://thumbsnap.com/i/wxDcxfJH.png",
                url: vurl + lazy,
                col_type: col,
                extra: {
                    pageTitle: pdfh(item, "h3&&a&&Text"),
                    longClick: !url.includes("content") ? [{
                        title: '【跳页】【当前第>' + currpagenum + '<页】【尾页=>' + lastpagenum + '页】',
                        js: $.toString((lastpagenum, url) => {
                                return $('', '正确的页码：1=>' + lastpagenum + "页")
                                    .input((url, lastpagenum) => {
                                            if (input > 0 && input % 1 == 0 && input <= parseInt(lastpagenum)) {
                                                var jumpu = url.replace(/\d+\.html/, input + ".html")
                                                putMyVar("url", jumpu);
                                                putMyVar("yurl", jumpu);
                                                refreshPage();
                                                return 'toast://你已经穿越到了' + input + '页'
                                            } else {
                                                return "toast://请输入正确的页码"
                                            }
                                        },
                                        url, lastpagenum)
                            },
                            lastpagenum, url)
                    }] : ""
                }
            })
        })
    },

    //一级系列
    seriesType: (url, html) => {
        if (MY_PAGE == 1) {
            Apollo.videoSort(html)
        }
        Apollo.videoType(url, html)
    },

    //一级sort
    videoSort: (html) => {
        Apollo.d.push({
            col_type: "blank_block",
        })
        var chtml = fetch("https://18av.mm-cg.com/zh/chinese_categorylist/list/index.html")
        const sort = pdfa(chtml, 'body&&.posts&&.post')
        sort.forEach((item, index) => {
            var title = pdfh(item, 'Text');
            Apollo.d.push({
                title: getMyVar('sort', '0') == index ? '‘‘’’<strong><font color="#ff1493">' + title + '</font></strong>' : title,
                url: pdfh(item, 'a&&href') + $('#noLoading#')
                    .lazyRule((index) => {
                        putMyVar('sort', index);
                        putMyVar("url", input);
                        refreshPage();
                        return 'hiker://empty'
                    }, index),
                col_type: 'scroll_button'
            })
            if (index == 54 || index == 123 || index == 189 || index == 294) {
                Apollo.d.push({
                    col_type: "blank_block",
                })
            }
        })
    },
    //一级页面.简
    avatarParse: (url) => {
        addListener("onClose", $.toString(() => {
            clearMyVar("yurl");
            clearMyVar("ysort");
            clearMyVar("nextPage1");
        }));
        url = url.replace(/(.*?)#.*/, "$1");
        url = getMyVar("yurl", url)
            .replace(/(.*?)#.*/, "$1");
        /*
        if (MY_PAGE !== 1) {
            url = url.includes("?") ? url + "&page=" + MY_PAGE : url + "?&page=" + MY_PAGE
        }
        const html = fetch(url, {
            headers: {
                "Cookie": fetchPC('hiker://files/rules/Apollo/Cookie/javlibrary_cookie.txt') || '',
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046279 Mobile Safari/537.36",
            }
        })
        log(url)*/
        let nextPage = getMyVar("nextPage1", "");
        if (nextPage && MY_PAGE > 1) {
            url = nextPage;
        } else if (MY_PAGE > 1) {
            url = "没有下一页哦😑"
        }
        var html = fetch(url, {
            headers: {
                //"cookie": fetchPC('hiker://files/rules/Apollo/Cookie/javlibrary_cookie.txt') || '',
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046279 Mobile Safari/537.36",
            }
        })
        log(url)
        try {
            var next = pdfh(html, "body&&.pagination-row&&.previous-next:matches(>)&&a&&href")
            putMyVar("nextPage1", next);
        } catch {
            clearMyVar("nextPage1");
            // log("可能不存在下一页或者下一页定位有问题");
        }
        Apollo.videoType(url, html)
    },

    //搜索
    searchParse: (url) => {
        url = Apollo.url + url.replace("hiker://empty##", "")
        log(url)
        var html = fetch(url, {
            headers: {
                // "cookie": fetchPC('hiker://files/rules/Apollo/Cookie/javlibrary_cookie.txt') || '',
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046279 Mobile Safari/537.36",
            },
        });
        Apollo.videoType(url, html)
        setResult(Apollo.d)
    },

    //二级
    videoParse: (url) => {
        addListener("onClose", () => {
            clearMyVar("piclist");
        });
        log(url)
        var yiji = $('#fypage#noHistory#')
            .rule(() => {
                const Apollo = $.require('hiker://page/Apollo')
                Apollo.avatarParse(MY_URL)
                setResult(Apollo.d)
            })
        const html = fetch(url, {
            headers: {
                // "cookie": fetchPC('hiker://files/rules/Apollo/Cookie/javlibrary_cookie.txt') || '',
                "User-Agent": "Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046279 Mobile Safari/537.36",
            }
        })
        try {
            var title = pdfh(html, "h1&&Text")
                .replace("免费AV在线看", "");
            Apollo.d.push({
                title: '““””' + title.fontcolor("#E57A1A").small(),
                url: url,
                col_type: 'text_1',
                extra: {
                    lineVisible: false,
                    id: 'transdesc',
                    longClick: [{
                        title: '复制',
                        js: $.toString((title) => {
                            return "copy://" + title;
                        }, title)
                    }, {
                        title: '百度翻译',
                        js: $.toString((title) => {
                            return "x5://https://fanyi.baidu.com/#jp/zh/" + title
                        }, title)
                    }, {
                        title: 'Deepl翻译',
                        js: $.toString((title) => {
                            return "x5://https://www.deepl.com/zh/translator-mobile#cn/zh/" + title
                        }, title)
                    }, {
                        title: '谷歌翻译',
                        js: $.toString((title) => {
                            return "x5://https://translate.google.com/?hl=zh-CN&sl=cn&tl=zh-CN&text=" + title
                        }, title)
                    }]
                }
            })
        } catch {}

        const img = pdfh(html, "#dz_video&&img&&src");
        Apollo.d.push({
            img: img,
            url: "hiker://empty",
            col_type: "pic_1_full",
        })

        Apollo.d.push({
            col_type: "big_blank_block"
        })

        Apollo.PlayParse(html)

        try {
            const 识别码 = pdfh(html, "body&&.posts-inner-details-text-top&&li:matches(番號:)+li&&Text")
            if (识别码 != "") Apollo.CodeParse(识别码)
        } catch {}
        Apollo.d.push({
            col_type: "big_blank_block"
        })
        Apollo.d.push({
            col_type: "big_blank_block"
        })
        try {
            Apollo.d.push({
                title: '““””番号:' + 识别码.fontcolor("#FFD000"),
                url: "copy://" + 识别码,
                col_type: "scroll_button",
            }, {
                title: pdfh(html, 'body&&.posts-inner-details-text-top&&.posts-message,1&&Text'),
                url: 识别码 + $('#noLoading#')
                    .lazyRule(() => {
                        return "hiker://page/yj?rule=𝐉𝐚𝐯𝐃𝐁&url=" + getPublicItem('javdb0', 'https://javdb.com') + "/search？？f=all＆＆page=fypage＆＆q=" + input
                    }),
                col_type: "scroll_button",
            }, {
                title: pdfh(html, 'body&&.posts-inner-details-text-top&&.posts-message,2&&Text').replace(/（.*?）/, "鐘"),
                url: Apollo.empty,
                col_type: "scroll_button",
            }, {
                col_type: 'blank_block',
            })
        } catch {}
        //导演
        try {
            var director = pdfh(html, 'body&&.posts-inner-details-text-top&&li:matches(導演:)+li&&Text');
            if (director) {
                Apollo.d.push({
                    title: "导演:",
                    url: 'hiker://empty',
                    col_type: 'scroll_button',
                })
                Apollo.d.push({
                    title: '‘‘’’<b><middle><font color="#1E90FF">' + director + '</font></middle></b>',
                    url: pdfh(html, 'body&&.posts-inner-details-text-top&&li:matches(導演:)+li&&a&&href') + yiji,
                    col_type: 'scroll_button',
                    extra: {
                        pageTitle: director,
                    }
                });
            }
        } catch {}
        //片商
        try {
            var maker = pdfh(html, 'body&&.posts-inner-details-text-top&&li:matches(製作商:)+li&&Text');
            if (maker) {
                Apollo.d.push({
                    title: "片商:",
                    url: 'hiker://empty',
                    col_type: 'scroll_button',
                })
                Apollo.d.push({
                    title: '‘‘’’<b><middle><font color="#1E90FF">' + maker + '</font></middle></b>',
                    url: pdfh(html, 'body&&.posts-inner-details-text-top&&li:matches(製作商:)+li&&a&&href') + yiji,
                    col_type: 'scroll_button',
                    extra: {
                        pageTitle: maker,
                    }
                })
            }
        } catch {}
        //发行商
        try {
            var label = pdfh(html, 'body&&.posts-inner-details-text-top&&li:matches(發行商:)+li&&Text');
            if (label) {
                Apollo.d.push({
                    title: "发行商:",
                    url: 'hiker://empty',
                    col_type: 'scroll_button',
                })
                Apollo.d.push({
                    title: '‘‘’’<b><middle><font color="#1E90FF">' + label + '</font></middle></b>',
                    url: pdfh(html, 'body&&.posts-inner-details-text-top&&li:matches(發行商:)+li&&a&&href') + yiji,
                    col_type: 'scroll_button',
                    extra: {
                        pageTitle: label,
                    }
                })
            }
        } catch {}
        Apollo.d.push({
            col_type: "blank_block"
        })

        //类别
        var arts = parseDomForArray(html, 'body&&.posts-inner-details-text-under&&a');
        if (arts.length > 0) {
            Apollo.d.push({
                col_type: "blank_block"
            })
            Apollo.d.push({
                title: "類別:",
                url: 'hiker://empty',
                col_type: 'scroll_button',
            });
            for (var i in arts) {
                var url = pdfh(arts[i], 'a&&href');
                Apollo.d.push({
                    title: '‘‘’’<b><middle><font color="#1E8884">' + parseDomForHtml(arts[i], 'Text') + '</font></middle></b>',
                    url: url + yiji,
                    col_type: 'scroll_button',
                    extra: {
                        pageTitle: parseDomForHtml(arts[i], 'Text')
                    }
                })
            }
        }

        //演员
        var arts = parseDomForArray(html, 'body&&.actor-right-details-images&&li');
        if (arts.length > 0) {
            Apollo.d.push({
                col_type: "blank_block"
            })
            Apollo.d.push({
                title: "演員 ",
                url: 'hiker://empty',
                col_type: 'text_center_1',
                extra: {
                    lineVisible: false
                }
            })
            for (var i in arts) {
                var title = parseDomForHtml(arts[i], 'p&&Text');
                var url = pdfh(arts[i], 'a&&href');
                Apollo.d.push({
                    title: '‘‘’’<b><middle><font color="#c13141">' + title + '</font></middle></b>',
                    img: pdfh(arts[i], 'img&&src') ? pdfh(arts[i], 'img&&src') : "https://thumbsnap.com/i/sySMQ7Mg.jpg",
                    url: url + yiji,
                    col_type: 'card_pic_3',
                    extra: {
                        pageTitle: title,
                        longClick: [{
                            title: '复制演员',
                            js: $.toString((title) => {
                                return "copy://" + title;
                            }, title)
                        }, {
                            title: '谷歌搜索',
                            js: $.toString((title) => {
                                return "https://www.google.com/search?q=" + title;
                            }, title)
                        }, {
                            title: '百度搜索',
                            js: $.toString((title) => {
                                return "https://www.baidu.com/s?wd=" + title;
                            }, title)
                        }, {
                            title: '磁力搜演员',
                            js: $.toString((title) => {
                                return "hiker://page/sou?rule=磁力君.简&p=fypage&searchTerms=" + title
                            }, title)
                        }]
                    }
                })
            }
        }
        Apollo.d.push({
            col_type: "blank_block"
        })
        Apollo.d.push({
            title: '““””' + "隨機主題".fontcolor("#FF00FF"),
            url: Apollo.empty,
            col_type: "text_center_1",
            extra: {
                lineVisible: false
            }
        })
        Apollo.videoType(url, html)

        Apollo.d.push({
            title: '““””' + "我是有底线的".fontcolor("grey")
                .small(),
            url: Apollo.empty,
            col_type: "text_center_1",
            extra: {
                lineVisible: false
            }
        })
        setResult(Apollo.d)
    },

    //播放列表
    PlayParse: (html) => {
        // 引入加密解密库
        eval(getCryptoJS())
        let list = [];
        let _hcdeedg252 = html.match(/hcdeedg252=\d+/)[0];
        let _hadeedg252 = html.match(/hadeedg252=\d+/)[0];
        // console.log(`_hcdeedg252:${_hcdeedg252}`);
        // console.log(`_hadeedg252:${_hadeedg252}`);
        let _argdeqweqweqwe = html.match(/.argdeqweqweqwe.=.'\w+';/)[0];
        // console.log(`_argdeqweqweqwe:${_argdeqweqweqwe}`);
        let _hdddedg252 = html.match(/.hdddedg252.=.'\w+';/)[0];
        // console.log(`_hdddedg252:${_hdddedg252}`);
        let _mvarr = html.match(/mvarr[\d_\[\]']+=\[\[.*\],\];/)[0];
        // console.log(_mvarr);
        let server = _mvarr.match(/mvarr[\d_\[\]']+/g).map(x => {
            return x.replace('mvarr[\'', '').replace('\']', '');
        });
        let mvarr = {};
        let hcdeedg252;
        let hadeedg252;
        let argdeqweqweqwe;
        let hdddedg252;
        let _js = `${_hcdeedg252},${_hadeedg252};${_argdeqweqweqwe}${_hdddedg252}${_mvarr}`;
        // console.log(_js);
        eval(_js);

        function hsdfdg252(a) {
            let hsddfdg252 = [];
            let hedeedg252 = [];
            hcdeedg252 = hcdeedg252 <= 25 ? hcdeedg252 : hcdeedg252 % 25;
            let splitStr = String.fromCharCode(hcdeedg252 + 97);
            hsddfdg252 = a.split(splitStr);
            for (let i = 0; i < hsddfdg252.length; i++) {
                let hfdeedg252 = parseInt(hsddfdg252[i], hcdeedg252);
                hfdeedg252 = (hfdeedg252 * 1) ^ hadeedg252;
                let hjdeedg252 = String.fromCharCode(hfdeedg252);
                hedeedg252.push(hjdeedg252)
            }
            let hgdeedg252 = hedeedg252.join("");
            return hgdeedg252
        }

        function decr_sun(a, b, c, d) {
            a = hsdfdg252(a);
            var e = CryptoJS.enc.Utf8.parse(argdeqweqweqwe);
            var f = CryptoJS.enc.Utf8.parse(hdddedg252);
            var g = CryptoJS.AES.decrypt(a, e, {
                iv: f,
                padding: CryptoJS.pad.Pkcs7
            });
            // console.log(b + g.toString(CryptoJS.enc.Utf8) + c);
            return b + g.toString(CryptoJS.enc.Utf8) + c;
            // $("#" + d).attr("src", b + g.toString(CryptoJS.enc.Utf8) + c)
        }

        function jfun_show_mvinnerHTML(a) {
            if (a === '7_1' || a === '28_1') {
                //return;
            }
            for (let mvarr_i = 0; mvarr_i < mvarr[a].length; mvarr_i++) {
                let res = mvarr[a][mvarr_i][2] + mvarr[a][mvarr_i][5];
                // console.log(res);
                let decUrl = decr_sun(mvarr[a][mvarr_i][1], mvarr[a][mvarr_i][3], mvarr[a][mvarr_i][4], mvarr[a][mvarr_i][0]);
                list.push({
                    'title': a,
                    'url': decUrl.startsWith('//') ? `https:${decUrl}` : decUrl
                });
            }
        }
        server.forEach(x => {
            jfun_show_mvinnerHTML(x);
        })

        var lazy = $('').lazyRule(() => {
            let videoUrl = '';
            let requestUrl = input.replace("mmsw01", "mmsw02");
            var html = fetch(requestUrl)
            if (requestUrl.indexOf(config.host) != -1) {
                let res = html.match(/https.*?m3u8/);
                if (res == undefined || res.length == 0) {
                    //res = html.match(/file:.\'(.*)\'\},/);
                }
                videoUrl = res[0] + ";{Referer@https://streamfastpro.com/}";
            } else if (requestUrl.indexOf("streamfastpro") != -1) {
                let res = html.match(/https.*?m3u8/);
                if (res == undefined || res.length == 0) {
                    res = html.match(/file:.\'(.*)\'\},/);
                }
                videoUrl = res[0] + ";{Referer@https://streamfastpro.com/}";

            } else if (requestUrl.indexOf('dood') != -1) {
                var redirect = JSON.parse(fetch(input, {
                    onlyHeaders: true
                })).url;
                var htmll = fetch(redirect, {
                    headers: {
                        referer: config.host
                    }
                });
                var pass_md5 = getHome(redirect) + htmll.match(/\/pass_md5[^"']+/)[0]
                var token = htmll.match(/cookieIndex.*?\'(.*?)\'/)[1]
                var data = fetch(pass_md5, {
                    headers: {
                        "Referer": redirect
                    }
                })

                function makePlay(token) {
                    for (var a = "",
                            t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
                            n = t.length,
                            o = 0; 10 > o; o++)
                        a += t.charAt(Math.floor(Math.random() * n));
                    return a + "?token=" + token + "&expiry=" + Date.now();
                };
                var urlPlay = data + makePlay(token)
                videoUrl = urlPlay + "#isVideo=true#;{Referer@" + config.host + "/}"

            } else if (requestUrl.indexOf('mm') != -1) {
                var script = html.match(/eval(.*\))/)[1]
                videoUrl = eval(script).match(/(https?.*?)"/)[1]
            } else if (requestUrl.includes("emturbovid")) {
                //①TV线路
                var domain = getHome(requestUrl)
                var path = fetch(requestUrl, {
                    headers: {
                        'Referer': requestUrl
                    }
                }).match(/'.*?(\/.*?\.m3u8)/)[1]
                var videoUrl = path.includes("com") ? "https:" + path : getHome(location) + path
                videoUrl = videoUrl + ";{Referer@" + requestUrl + "}"
            }
            return videoUrl;
        })
        //log(list)
        var col;
        if (list.length == 1) {
            col = "text_2"
        } else if (list.length < 6) {
            col = "text_" + list.length
        } else if (list.length < 11) {
            col = "text_" + Math.ceil(list.length / 2)
        } else {
            col = "text_5"
        }

        var servers = pdfa(html, ".btnst&&a").map(n => pdfh(n, "Text")) //播放列表名
        list.forEach((item, index) => {
            Apollo.d.push({
                title: servers[index].replace("(可下載)", ""),
                url: item.url + lazy,
                col_type: col
            })
        })
    },
    //外链播放
    CodeParse: (识别码) => {
        Apollo.d.push({
            col_type: 'blank_block',
        })
        var codelazy = fetch('hiker://files/rules/Apollo/𝐂𝐨𝐝𝐞𝐋𝐚𝐳𝐲.js')
            .replace(/d\.push/g, "Apollo.d.push") || "";

        function downcode() {
            var js = fetch("https://mirror.ghproxy.com/https://raw.githubusercontent.com/ApolloRioo/R/master/𝐂𝐨𝐝𝐞𝐋𝐚𝐳𝐲");
            writeFile('hiker://files/rules/Apollo/𝐂𝐨𝐝𝐞𝐋𝐚𝐳𝐲.js', js);
            toast("远程数据已更新到本地")
            codelazy = fetch('hiker://files/rules/Apollo/𝐂𝐨𝐝𝐞𝐋𝐚𝐳𝐲.js')
                .replace(/d\.push/g, "Apollo.d.push")
        }
        if (!codelazy) {
            downcode()
        }
        try {
            eval(codelazy)
        } catch {
            downcode()
            eval(codelazy)
            log("读取失败更新远程数据")
        }
        CodeLazy(识别码)
    },

    HostParse: (url, html) => {
        if (html.includes("同意(enter)")) {
            var cc = pdfh(html, ".scale_2&&input[type=submit]&&onclick").split("\"")[1]
            log("獲取cookie地址：" + cc)
            request(cc)
            //java.lang.Thread.sleep(500);
            refreshPage()
        } else if (!html.includes("发布页地址") && !url.includes("没有下一页哦")) {
            showLoading('正在获取域名，请稍候');
            let host;
            var homeLink = "https://18av.mm-cg.com";
            if (request(homeLink).includes("请换新网址")) {
                var homePage = fetchCodeByWebView(homeLink, {
                    'blockRules': ["baidu.*.png", ".jpg", ".mp3", "m3u8", "mp4", ".flv", ".avi", ".3gp", ".mpeg", ".wmv", ".mov", ".rmvb", ".gif", ".jpg", ".jpeg", ".png", ".ico", ".svg"],
                    timeout: 5000
                });
                var links = pdfh(homePage, "b&&Html").split("<br><br> ");
                log(links)
                for (var i = 1; i < links.length - 1; i++) {
                    var releasePage = fetchCodeByWebView(links[i], {
                        'blockRules': ["baidu.*.png", ".jpg", ".mp3", "m3u8", "mp4", ".flv", ".avi", ".3gp", ".mpeg", ".wmv", ".mov", ".rmvb", ".gif", ".jpg", ".jpeg", ".png", ".ico", ".svg"],
                        timeout: 5000
                    });
                    if (releasePage.includes("1_8_A_V_發佈頁")) {
                        var hosts = pdfh(releasePage, ".list,5&&ul&&Html").match(/http.*?com/g);
                        //log(hosts)
                        log("备选域名" + hosts.length + "个：\n" + hosts.join("\n"))
                        for (var j = 0; j < hosts.length; j++) {
                            var indexPage = request(hosts[j]);
                            if (indexPage.includes("同意(enter)") || indexPage.includes("18AV在線H成人影片")) {
                                if (indexPage.includes("本域名将停用")) {
                                    host = pdfh(indexPage, ".di_img&&font,1&&a&&Text");
                                } else {
                                    host = hosts[j].replace("http", "https");
                                }
                                break;
                            }
                        }
                        break;
                    }
                }
            } else {
                host = homeLink;
                log("挂梯子了，直接访问")
            }
            log("获取到的域名：\n" + host)
            setItem('link', host);
            hideLoading();
            java.lang.Thread.sleep(200);
            refreshPage();
        }
    }

}

$.exports = Apollo